presentation_title "Confidential Containers - Distrusting your VM host" fr "Les conteneurs sécurisés - Ne faites confiance à personne!"
presentation_logo "ConfidentialContainersLogo.png"
presentation_url "https://github.com/c3d/presentations"
presentation_tao "https://github.com/c3d/presentations (branch sophiaconf-2022)"
presentation_author "Christophe de Dinechin"
presentation_author_title "Senior Principal Software Engineer"
presentation_author_mail "dinechin@redhat.com"

blank_slide "SophiaConf 2022",
// ----------------------------------------------------------------------------
//   Parking slide withi SophiaConf 2022 logo
// ----------------------------------------------------------------------------
    contents 120,
        color "white"
        image 0, 0, 120%, 120%, "SophiaConfLogo.png"


// ----------------------------------------------------------------------------
main_title_slide "Main title",
// ----------------------------------------------------------------------------
    title
        $ "Confidential Containers" fr "Les conteneurs sécurisés"
        $ "Distrusting your VM host" fr "Ne faites confiance à personne!"
    subtitle
        $ "Keeping live in-memory data from prying eyes" fr "en chiffrant même la mémoire vive"

    title_slide_author "Christophe.jpg",
        $ presentation_author
        $ { italic presentation_author_title }
        font "Overpass Mono"
        $ presentation_author_mail

    title_slide_logo

    contents 10,
        color "white", 85%
        rounded_rectangle 600, -450, 500, 150, 20
        color "white"
        image 600, -450, 25%, 25%, "Logo SophiaConf 100% OpenSource.png"

disabled
    contents 120,
        show fade_between(page_time mod 10, 2, 6)
        color "white"
        image 0, 0, 120%, 120%, "SophiaConfLogo.png"



// ---------------------------------------------------------------------------
base_slide "Agenda",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Key topics we are going to cover today" fr "Le sujet du jour"
    slide_picture "Agenda.jpg", 0%, 320 // https://www.pexels.com/fr-fr/photo/programme-startup-a-faire-concept-7376/
    stepping
    story
        * "Why should someone else be able to see your data?" fr "Pourquoi révéler vos données à n'importe qui?"
        * "Confidential computing & encrypted virtualization" fr "Le ""Confidential Computing"" et la mémoire chiffrée"
        * "Adding ""Confidential"" to Kata Containers" fr "Intégration à Kata Containers"
        * "Securing image download" fr "Sécuriser le téléchargement des containers"
        * "Attestation: knowing what you run and where it runs" fr "Attestation: contrôler ce que vous exécutez et où ça s'exécute"
        * "Separating tenant and host realms" fr "Séparation des domaines de sécurité"
        * "Performance - Not all that great" fr "Et la performance? Bof..."

    right_picture
        images "Nosy Neighbour.jpg", "Canal+ Scrambled.jpg", "Kata Confidential Containers.png", "Matrix disintegration.png", "Attestation.png", "Tenants.jpg", "Snail.jpg"

        // Nosy Neighbour.jpg: https://www.pexels.com/fr-fr/photo/photographie-de-personne-qui-regarde-906018/
        // Canal+ Scrambled: image from https://www.youtube.com/watch?v=GhkmSoBmAWA
        // Kata Confidential Containers.jpg: Built using https://i0.wp.com/www.thecoderworld.com/wp-content/uploads/2021/05/Confidential-Computing.jpg and the Kata Containers logo
        // Matrix disintegration: Screen capture (fair use)
        // Attestation.png: https://pngimg.com/image/46040 (Creative Commons)
        // Tenants.jpg: http://www.readyelements.com/one-hand-giving-key-to-another-on-isolated-white-background-process-of-buying-renting-selling-5 (Creative Commons)
        // Snail.jpg: https://www.pexels.com/fr-fr/photo/escargot-noir-et-brun-blanc-sur-feuille-verte-209074/


// ----------------------------------------------------------------------------
base_slide "A very active project" fr "Un projet très actif",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "https://github.com/confidential-containers"
    slide_picture "ConfidentialContainersQRCode.png", 0, 300
    stepping
    contents -200,
        color "white"
        translate_y mouse_y
        image 0, 0, 50%, 50%, "ConfidentialContainersProject.png"
    contents -100,
        color "white", 0.8
        rectangle 0, 400, 2000, 220
        rectangle 0, -510, 2000, 80


// ============================================================================
//
section_slide "Problem statement" fr "C'est quoi le problème?",
//
// ============================================================================
    title page_label
    subtitle
        $ "Can we trust your infrastructure?" fr "Confiance, oui, mais je donne pas les clefs"


// ---------------------------------------------------------------------------
base_slide "Sandboxing workloads" fr "Toujours plus d'isolation",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "From your software to containers in VMs..." fr "Du logiciel au tombe-du-ciel"
    slide_picture_at OWS_SW..OWS_OS,      "Emoji=Happy.png", 5%, 300
    slide_picture_at OWS_CHROOT..OWS_KVM, "Emoji=Thinking.png", 5%, 300
    slide_picture_at OWS_CNTN..OWS_CRI,   "Emoji=Questioning.png", 4%, 350
    slide_picture_at OWS_KVIRT..OWS_KATA, "Emoji=Crazy.png", 3%, 300
    stepping
    picture
        caption_at OWS_SW, "Software is what matters" fr "Le logiciel, c'est ça qui compte vraiment"
        caption_at OWS_HW, "Direct hardware access (Original Mac, Unikernel)" fr "Accès direct au matériel (MS-DOS, Unikernel)"
        caption_at OWS_CLASH, "Sharing resources is both hard and risky" fr "Partager les resources est difficile et risqué"
        caption_at OWS_OS, "Operating system deal with this problem" fr "C'est le rôle du système d'exploitation"
        caption_at OWS_CHROOT, "chroot gives you a filesystem sandbox" fr "On peut isoler une partie des fichierts"
        caption_at OWS_VIRT, "Virtualization gives you a full machine sandbox" fr "On peut isoler en créant une machine virtuelle"
        caption_at OWS_QEMU, "QEMU: User-space interface for virtualization" fr "QEMU: première solution de virtualisation complète en logiciel libre"
        caption_at OWS_KVM, "KVM: Kernel component supporting virtualization" fr "KVM: support de la virtualisation directement dans le noyau Linux"
        caption_at OWS_CNTN, "Containers are complete OS-built sandboxes" fr "Les conteneurs sont une isolation par le système"
        caption_at OWS_MANY, "Containers scale well" fr "Ce qui est bien, c'est qu'on peut empiler vraiment beaucoup de conteneurs"
        caption_at OWS_DOCKER, "Containers provides rich software components composition and setup" fr "Les composants logiciels: distribution et assemblage"
        caption_at OWS_K8S, "OpenShift features large-scale orchestration" fr "Faire marcher tout ça demande une orchestration"
        caption_at OWS_CRI, "A modular interface connects orchestration to system and workloads" fr "Une architecture applicative repensée pour gérer tout ça"
        caption_at OWS_KVIRT, "You can orchestrate legacy workloads using KubeVirt virtual machines" fr "Pour les vieilles applis, retour à la virtualisation"
        caption_at OWS_KATA, "Kata Containers run sandboxed containers in isolated virtual machines" fr "Isoler les conteneurs par la virtualisation (Kata)"
        overview integer(smooth_step + 0.5)



// ----------------------------------------------------------------------------
base_slide "Confidential Computing" fr "L'informatique sécurisée",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Why should infrastructure see your data?" fr "Votre hébergeur peut-il voir vos données?"
    slide_picture "Confidential Computing.jpg", 5%, 350
    stepping

    picture
        caption_at CNF_HOST, "Software now runs on hardware you do not own, like a cloud provider" fr "Votre logiciel tourne maintenant sur l'ordi de quelqu'un d'autre"
        caption_at CNF_RESOURCES, "Hardware resources are owned by the host" fr "Les resources matérielles appartiennent en réalité à l'hébergeur qui les loue"
        caption_at CNF_CONTAINERS, "Containers carve out resources from the host" fr "Le conteneurs empruntent les resources dont ils ont besoin à cet hébergeur"
        caption_at CNF_SANDBOX_OUT, "Classical sandboxing only protects the host from the containers running on it" fr "L'isolation classique est conçue pour protéger l'hébergeur des conteneurs"
        caption_at CNF_SANDBOX_IN, "The host can freely peek insdie the container, for example read its memory" fr "À l'inverse, l'hébergeur peut tout à fait regarder dans un conteneur"
        caption_at CNF_TENANTS, "Multiple tenants do not want to share hardware when processing sensitive data" fr "Des concurrents ne voudront pas partager le même matériel pour des données sensibles"
        caption_at CNF_SAFE_TODAY, "Data on disk or in network can already be encrypted today, so the VM host cannot read it nor tamper with it" fr "Les données sur disque ou réseau sont déjà chiffrées aujourd'hui, donc OK"
        caption_at CNF_MEMORY_VM, "In current architectures, data in memory is not encrypted, so it can be accessed by the host" fr "Pour les données en mémoire vive, il faut le nouveau matériel"
        caption_at CNF_MEMORY_HOST, "Encrypted memory stores live data as cypher text, so that it becomes garbled when read by the host" fr "Les données ainsi protégées deviennent illisibles pour l'hébergeur"
        caption_at CNF_INTEGRITY, "Integrity ensures the host cannot corrupt nor poison CPU state or RAM contents" fr "Il faut aussi protéger l'intégrité de l'état du CPU ou de la mémoire"
        caption_at CNF_ATTESTATION, "Attestation proves where you are running and what you are running" fr "L'attestation permet de contrôler ce qui tourne, mais aussi où ça tourne"
        confidential integer(smooth_step + 0.5)


// ----------------------------------------------------------------------------
base_slide "Vendor landscape" fr "Les vendeurs et leur offre",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Different vendors with different approaches?" fr "Chaque vendeur a son approche bien à lui"
    slide_picture "Confidential Computing.jpg", 5%, 350
    stepping
    story
        * "AMD: Secure Encrypted Virtualization (SEV)"
        ** "SEV-ES adds Encrypted State (e.g. CPU register file)" fr "SEV-ES rajoute une protection de l'état CPU"
        ** "SEV-SNP adds Secure Nested Pages (integrity protection)" fr "SEV-SNP ajoute une notion d'intégrité"
        * "Intel: Trusted Domain Extensions (TDX)"
        * "IBM S390: Secure Execution (SE)"
        * "Power: Protected Execution Facility (PEF)"
        * "Arm: Confidential Computing Architecture (CCA)"
        * "All these technologies are based on virtualization" fr "Ces technologies sont toutes très virtuelles"
        * "They all work differently" fr "Elles fonctionnent toutes de façon différente"

    right_picture
        images "AMD SEV.png", "SEV-ES.png", "SEV-SNP.jpg", "Intel TDX.png", "S390 SE.jpg", "Power PEF.png", "Arm CCA.png", "Confidential VMs.jpg", "Zombie Apocalypse.jpg"

    right_picture
        only_at 9,
            show sin(2.5 * time)^2
            translate 100, 100, 50
            rotate_z 23 * sin(0.21 * time)
            style "boxtitle"
            color_hsv 20 * time, 1, 1
            line_color "green"
            text_box 0, 0, 300, 200,
                vertical_align 0.5
                align 0.5
                $ "There be zombies!" fr "Des zombies partout!"


// ----------------------------------------------------------------------------
base_slide "Kata Containers Overview" fr "La base: Kata Containers",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Run containers in virtual machines" fr "Des conteneurs dans des machines virtuelles"
    slide_picture "KataContainersLogo.png", 5%, 350
    stepping

    picture
        adjust_kata_containers_diagram S:real ->
            scale 100% - 30% * S
            translate_x -300 * S
        adjust_kata_containers_diagram fade_at(smooth_step, KC_CTR_ECOSYS)
        kata_containers integer(smooth_step + 0.5)

    contents 0,
        text_box 600, 0, 430 fr 400, 600,
            style "story"
            align 0
            vertical_align 30%
            at_step KC_CTR_ECOSYS
            color "#14E"
            $ "Containers ecosystem" fr "L'écosystème des conteneurs"
            at_step KC_VM_ISOL
            color "#184"
            $ "Virtual machine isolation" fr "L'isolation des machines virtuelles"


// ----------------------------------------------------------------------------
base_slide "Confidential Containers in Kata" fr "Conteneurs sécurisés avec Kata",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Taking advantage of confidential computing" fr "Application de l'informatique sécurisée"
    slide_picture "Confidential - Top Secret.png", 5%, 300
    stepping

    picture
        adjust_cc_diagram S:real, T:real ->
            scale 70% + 10% * (S - T)
            translate (1-S) * -300 - 300 * T, S * 130, 0
        adjust_cc_diagram fade_at(smooth_step, CC_LINUX_KERNEL), fade_at(smooth_step, CC_RELYING)
        kata_containers integer(KC_CONFIDENTIAL + smooth_step + 0.5)

    contents 0,
        at_step CC_PLATFORM
        locally
            line_color "black"
            line_width 2
            color "white", 0.8
            rectangle 700, -170, 450, 450
        text_box 700, -170, 400, 400,
            style "story"
            font_size 24
            color "#C22"
            rectangle 0, 7, 50, 20
            bold " Trusted platform: " fr " Plateforme sécurisée: "
            color "black"
            $ "Offers confidential guarantees using hardware-level cryptographic enforcement." fr "Offre des garanties de sécurité à l'aide de cryptographie matérielle."
            at_step CC_HOST
            color "#24C"
            rectangle 0, 7, 50, 20
            bold " Host: " fr " Hébergeur: "
            color "black"
            $ "Manages and offers resources used to run containers (CPU, memory, I/O, etc)" fr "Gère et présente les resources pour les conteneurs (CPU, mémoire, E/S, etc)"
            at_step CC_TENANT
            color "#2A2"
            rectangle 0, 7, 50, 20
            bold " Tenant: " fr " Locataire: "
            color "black"
            $ "Confidential area, inaccessible to the host even when running on it" fr "Environnement confidentiel, inaccessible à l'hébergeur même lorsqu'elle l'utilise"



// ----------------------------------------------------------------------------
base_slide "Phase 1: Hardware enablement" fr "Phase 1: Activation matérielle",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Just activating the confidential computing technologies" fr "Mise en place des technologies sécurisées"
    slide_picture "Confidential - Top Secret.png", 3%, 300
    stepping

    picture
        adjust_he_diagram S:real ->
            scale 70%
            translate -300, 130, 0
        adjust_he_diagram fade_at(smooth_step, HE_RUNTIME_CC)
        kata_containers integer(KC_ENABLEMENT + smooth_step + 0.5)

    contents 0,
        at_step 1
        locally
            line_color "black"
            line_width 2
            color "white", 0.8
            rectangle 680, -190, 550, 450
        text_box 680, -190, 500, 400,
            style "story"
            font_size 20
            at_step HE_HARDWARE
            bold "Hardware: " fr "Matériel: "
            $ "Encryption support in memory controller" fr "Support du chiffrage dans le contrôleur de mémoire"
            at_step HE_FIRMWARE_CC
            bold "Firmware: " fr "Microgiciel: "
            $ "Special services like physical page validation" fr "Services spéciaux comme la validation de pages"
            at_step HE_KERNEL
            bold "Kernel: " fr "Noyau: "
            $ "Low-level hardware support, e.g. SEV, TDX" fr "Support bas niveau, p.ex. SEV, TDX"
            at_step HE_RUNTIME_CC
            bold "Runtime: " fr "Runtime: "
            $ "Pass the right options to hypervisor" fr "Passe des options à l'hyperviseur"
            at_step HE_HYPER_CC
            bold "Hypervisor: " fr "Hyperviseur: "
            $ "Setup virtual machines with encryption, etc" fr "Machines virtuelles avec chiffrage mémoire"
            at_step HE_AGENTCC
            bold "Agent: " fr "Agent: "
            $ "Image download, confidential services" fr "Téléchargement d'images, services confidentiels"




// ----------------------------------------------------------------------------
base_slide "Phase 2: Securing image pull",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Download images from within the guest"
    slide_picture "Secure Cloud.png", 3%, 300
    stepping

    one_picture
        image 0, 0, 75%, 75%, "Kata Pull Image.png"



// ----------------------------------------------------------------------------
base_slide "Attestation",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Measuring what we run using crypto"
    slide_picture "Measuring.png", 3%, 300
    stepping

    one_picture
        image 0, 0, 75%, 75%, "Kata Measurement.png"

// ----------------------------------------------------------------------------
base_slide "Attestation process",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Exchanging keys with the relying party"
    slide_picture "Key Exchange.jpg", 3%, 300
    stepping

    one_picture
        image 0, 0, 75%, 75%, "Kata Attestation.png"

// ----------------------------------------------------------------------------
base_slide "Immutable Pods",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "You cannot change what you certified"
    slide_picture "Certified.png", 3%, 300
    stepping

    one_picture
        image 0, 0, 70%, 70%, "Kata Immutable Pods.png"

// ----------------------------------------------------------------------------
base_slide "Two Control Planes",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Host and Tenant security realms"
    slide_picture "Two Steering Wheels.jpg", 3%, 300
    stepping

    one_picture
        image 0, 0, 70%, 70%, "Kata Dual Control Plane.png"


// ============================================================================
//
section_slide "Performance considerations",
//
// ============================================================================
    title page_label
    subtitle "Impact of running virtualized"


// ============================================================================
//
section_slide "Memory density",
//
// ============================================================================
    title page_label
    subtitle "How many containers can you fit?"


memory_axis ->
    if stacked_item_sum > 5120 then
        reference_scale 6144, "6G"
        reference_tick  5120, "5G"
        reference_tick  4096, "4G"
        reference_tick  3072, "3G"
        reference_tick  2048, "2G"
        reference_tick  1024, "1G"
    else if stacked_item_sum > 4096 then
        reference_scale 5120, "5G"
        reference_tick  4096, "4G"
        reference_tick  3072, "3G"
        reference_tick  2048, "2G"
        reference_tick  1024, "1G"
    else if stacked_item_sum > 3072 then
        reference_scale 4096, "4G"
        reference_tick  3072, "3G"
        reference_tick  2048, "2G"
        reference_tick  1024, "1G"
    else if stacked_item_sum > 2048 then
        reference_scale 3072, "3G"
        reference_tick  2048, "2G"
        reference_tick  1024, "1G"
    else if stacked_item_sum > 1024 then
        reference_scale 2048, "2G"
        reference_tick  1024, "1G"
    else
        reference_scale 1024, "1G"
        reference_tick   512, "512M"


MEM_START       -> 0
MEM_HOST        -> 1
MEM_CONMON      -> 2
MEM_BASH        -> 3
MEM_NGINX       -> 4
MEM_KUBELET     -> 5
MEM_CRIO        -> 6
MEM_x100        -> 7
MEM_x1          -> 8
MEM_RUNTIME     -> 9
MEM_SHIM        -> 10
MEM_QEMU        -> 11
MEM_VIRTIOFSD   -> 12
MEM_GUEST       -> 13
MEM_AGENT       -> 14
MEM_RUNTIME_OUT -> 15
MEM_DNF_INSTALL -> 16
MEM_SCALEx100   -> 17
MEM_LOADx100    -> 18
MEM_CONMONx100  -> 19
MEM_SHIMx100    -> 20
MEM_SHIMv2      -> 21
MEM_LAST        -> 22

mem_host        -> anim 0.0, MEM_START=0, MEM_HOST=950
mem_kubelet     -> anim 0.0, MEM_START=0, MEM_KUBELET=110
mem_crio        -> anim 0.0, MEM_START=0, MEM_CRIO=28
mem_conmon      -> anim 0.0, MEM_START=0, MEM_CONMON=2.5, MEM_x100=250, MEM_x1=2.5, MEM_CONMONx100=250, MEM_SHIMv2=0.0
mem_shim        -> anim 0.0, MEM_START=0, MEM_SHIM=16.8, MEM_SHIMx100=1680, MEM_SHIMv2=19.2
mem_workload    -> anim 0.0, MEM_START=0, MEM_BASH=4.7, MEM_NGINX=8.4, MEM_x100=840, MEM_x1=8.4, MEM_LOADx100=840
mem_runtime     -> anim 0.0, MEM_START=0, MEM_RUNTIME=25, MEM_RUNTIME_OUT=0
mem_qemu        -> anim 0.0, MEM_START=0, MEM_QEMU=30
mem_virtiofsd   -> anim 0.0, MEM_START=0, MEM_VIRTIOFSD=10, MEM_DNF_INSTALL=350
mem_guest       -> anim 0.0, MEM_START=0, MEM_GUEST=300, MEM_DNF_INSTALL=880
mem_agent       -> anim 0.0, MEM_START=0, MEM_AGENT=60
mem_scale       -> anim 0.1, MEM_START=0.7, MEM_KUBELET=0.35, MEM_x100=0.3, MEM_SCALEx100=0.15

name_workload   -> anim_text "Bash", MEM_NGINX="nginx", MEM_x100="nginx x 100", MEM_x1="nginx", MEM_LOADx100="nginx x 100"
name_conmon     -> anim_text "Conmon", MEM_x100="Conmon x 100", MEM_x1="Conmon", MEM_CONMONx100="Conmon x 100"
name_shim       -> anim_text "Kata Shim", MEM_SHIMx100="Kata Shim x100", MEM_SHIMv2="shim-v2"

mem_subtitle    -> anim_text "Death by a thousand cuts", MEM_BASH="Running bash", MEM_NGINX="Running a web server", MEM_KUBELET="Kubernetes overhead", MEM_x100="Running 100 containers", MEM_x1="Overhead varies with number of containers", MEM_RUNTIME="Kata adds even more overhead", MEM_RUNTIME_OUT="Kata Runtime is transient", MEM_DNF_INSTALL="I/Os consume memory (buffers, etc)", MEM_SCALEx100="Running 100 containers", MEM_SHIMv2="Kata Containers 2.0: Containerd Shim v2"

mem_cmdline     -> anim_text "", MEM_CONMON="podman run -it --rm fedora bash", MEM_NGINX="podman run -dt --pod new:nginx -p8080:80 nginx", MEM_KUBELET="kubectl apply -f nginx.yaml", MEM_x100="(yaml file with 100x nginx)", MEM_x1="kubectl apply -f nginx.yaml", MEM_RUNTIME="podman run -it --rm --runtime kata fedora bash", MEM_DNF_INSTALL="fedc07a13# dnf install -y procps-ng", MEM_SCALEx100="(runtimeClass kata, 100x nginx)", MEM_SHIMv2="containerd-shim-kata-v2"

// ---------------------------------------------------------------------------
base_slide "Memory usage",
// ----------------------------------------------------------------------------
    title page_label
    subtitle mem_subtitle
    slide_picture "Memory.jpg", 10%, 250
    stepping
    picture
        anim_step integer(smooth_step + 0.5)
        stacked_items "MB", mem_scale,
            stacked mem_host, "Host", "Host kernel and user-space programs"
            stacked mem_kubelet, "Kubelet", "Top-level control process"
            stacked mem_crio, "CRI-O", "Container runtime interface"
            stacked mem_runtime, "Kata Runtime", "Kata runtime (transient)"
            stacked mem_conmon, name_conmon, "Process monitoring your container"
            stacked mem_virtiofsd, "virtiofsd", "Host file access from guest"
            stacked mem_shim, name_shim, "I/O interface for container"
            stacked mem_qemu, "QEMU", "Virtual machine monitor"
            stacked mem_guest, "Guest", "Guest OS kernel, data, user-space"
            stacked mem_agent, "Agent", "Kata agent in the guest"
            stacked mem_workload, name_workload, "Actual workload you are running"
        translate 0, -300, 0
        memory_axis
        at_step MEM_LAST

    picture
        text_box 0, 380, 1200, 100,
            style "story"
            align 0.5
            code mem_cmdline

    picture
        only_at MEM_DNF_INSTALL..MEM_LOADx100,
            text_box 750, 0, 400, 500,
                style "story"
                color tao "red"
                text "Possible double accounting of the same physical memory between guest and virtiofsd"


memory_crio      -> 53         // 28 + 2.5x10
memory_k8s       -> 163        // memory_crio + 110
memory_1pod_k1   -> 561        // memory_crio + 16.8x10 + (30 + 10 + 300)
memory_1pod_k1L  -> 911        // memory_1pod_k1L + 350
memory_10pods_k1 -> 921        // 1pod + 9*(30 + 10)
memory_10pods_k1L-> 3961       // 10pods + 9*350
memory_1pod_k2   -> 112        // memory_crio + 19.2 + 30 + 10
memory_10pods_k2 -> 645        // memory_crio + 10 * (19.2 + 30 + 10)

// ---------------------------------------------------------------------------
base_slide "Memory - Comparing runtimes",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Cost of the runtime to run 10 instances of nginx"
    slide_picture "Memory.jpg", 10%, 250
    stepping
    picture
       stacked_item_scale := 0.5 - 0.35 * fade_at(smooth_step, 7)
       stacked_item_sum := 0.0

       translate 0, -200, 0

       bar_graph_unit "M"

       bar_graph 0, memory_crio,        "CRI-O"
       bar_graph 1, memory_k8s,         "Kubernetes"
       bar_graph 2, memory_1pod_k1,     "One pod, Kata 1.12"
       bar_graph 3, memory_10pods_k1,   "Ten pods, Kata 1.12"
       bar_graph 4, memory_1pod_k2,     "One pod, Kata 2.0"
       bar_graph 5, memory_10pods_k2,   "Ten pods, Kata 2.0"

       last_graph 6,
           * "Kata requires a lot of memory for qemu, guest kernel and virtiofs."
           * "Reusing pods can help, but is not common practice."

       memory_axis


// ---------------------------------------------------------------------------
base_slide "Memory - disk caches",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Perform a dnf install inside the running pods"
    slide_picture "Memory.jpg", 10%, 250
    stepping
    picture
       stacked_item_scale := 0.5 - 0.35 * fade_at(smooth_step, 3)
       stacked_item_sum := 0.0

       translate 0, -200, 0

       bar_graph_unit "M"

       bar_graph 0, memory_1pod_k1,     "One pod, Kata 1.12"
       bar_graph 1, memory_10pods_k1,   "Ten pods, Kata 1.12"
       bar_graph 2, memory_1pod_k1L,    "One pod, after I/Os"
       bar_graph 3, memory_10pods_k1L,  "Ten pods, after I/Os"

       last_graph 4,
           * "I/O buffers consume a lot of memory."
           * "DAX allows host and guests to share that memory"

       memory_axis


// ---------------------------------------------------------------------------
base_slide "Memory overhead - It's bad",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Huge effort needed to make things better"
    slide_picture "Memory.jpg", 10%, 250
    stepping
    story
        * "Too many processes"
        ** "Partially addressed by 2.0"
        ** "... but single point of failure"
        * "A lot of memory in buffer caches"
        ** "DAX allows host buffer caches to be used"

    code_move 300, 0, 1200, 700
    code_box_at_step 1, "Processes", { text load_text "conmon-dump.log" }
    code_box_at_step 2..3, "Kata Shim v2", { text load_text "conmon-dump-v2.log" }


// ============================================================================
//
section_slide "Boot time",
//
// ============================================================================
    title page_label
    subtitle "How fast does a container start?"


boot_axis ->
    if stacked_item_sum > 20 then
        reference_scale 30, "30s"
        reference_tick  20, "20s"
        reference_tick  10, "10s"
    else if stacked_item_sum > 15 then
        reference_scale 20, "20s"
        reference_tick  15, "15s"
        reference_tick  10, "10s"
        reference_tick  5, "5s"
    else if stacked_item_sum > 10 then
        reference_scale 15, "15s"
        reference_tick  10, "10s"
        reference_tick  5, "5s"
    else if stacked_item_sum > 5 then
        reference_scale 10, "10s"
        reference_tick  8, "8s"
        reference_tick  6, "6s"
        reference_tick  4, "4s"
        reference_tick  2, "2s"
    else if stacked_item_sum > 2 then
        reference_scale 5, "5s"
        reference_tick  4, "4s"
        reference_tick  3, "3s"
        reference_tick  2, "2s"
        reference_tick  1, "1s"
    else if stacked_item_sum > 1 then
        reference_scale 2, "2s"
        reference_tick  1, "1s"
    else
        reference_scale 1,   "1s"
        reference_tick  0.5, "0.5"


// ---------------------------------------------------------------------------
base_slide "Boot time overhead",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Time to boot containers"
    slide_picture "Boot.jpg", 10%, 250

    stepping
    picture
        anim_step integer(smooth_step + 0.5)
        boot_scale -> anim 0.0, 0=600.0, 1=50.0, 3=30
        stacked_item_scale := boot_scale
        stacked_item_sum := 0.0

        translate 0, -200, 0

        bar_graph_unit "s"

        bar_graph 0, boot_1busybox_runc,         "1x busybox on runc"
        bar_graph 1, boot_1busybox_kata,         "1x busybox on Kata"
        bar_graph 2, boot_20busybox_runc,        "20x busybox on runc"
        bar_graph 3, boot_20busybox_kata,        "20x busybox on Kata"

        last_graph 4,
            * "Pod boot time is relatively constant (about 7s here)"
            * "But can you run multiple containers in a single pod?"

        boot_axis

// ---------------------------------------------------------------------------
base_slide "Run time overhead",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Shutting down also takes time"
    slide_picture "Boot.jpg", 10%, 250

    stepping
    picture
        anim_step integer(smooth_step + 0.5)
        run_scale -> anim 0.0, 0=50.0, 1=30, 2=15
        stacked_item_scale := run_scale
        stacked_item_sum := 0.0

        translate 0, -200, 0

        bar_graph_unit "s"

        bar_graph 0, boot_20busybox_runc,        "20x busybox on runc"
        bar_graph 1, boot_20busybox_kata,        "20x busybox on Kata"
        bar_graph 2, run_20busybox_kata,         "Run 20x busybox"
        bar_graph 3, run_20alpine_kata,          "Run 20x alpine"
        bar_graph 4, run_20fedora_kata,          "Run 20x fedora"

        last_graph 5,
            * "Shutting down a Kata pod also takes time"
            * "With Kata, the container base you use is not as relevant"

        boot_axis


//    "http://events17.linuxfoundation.org/sites/events/files/slides/Light%20weight%20virtualization%20with%20QEMU%26KVM_0.pdf"

// ( for ((I=0; I < 100; I++)) do; podman run -it --rm alpine sh -c ; done; )  21.91s user 18.48s system 9% cpu 7:13.45 total

// ( for ((I=0; I < 100; I++)) do; podman run -it --rm --pull=never busybox sh -)  20.31s user 16.98s system 11% cpu 5:19.91 total

// ( for ((I=0; I < 100; I++)) do; podman run -it --rm --pull=never --runtime   )  32.70s user 22.99s system 10% cpu 8:51.73 total


// 20 runc alpine containers on turbo
// real	0m28.406s
// user	0m3.917s
// sys	0m3.346s
run_20alpine_kata -> 28.406

// 20 runc busybox
// real	0m27.390s
// user	0m3.881s
// sys	0m3.262s
run_20busybox_kata -> 27.390

// real	0m29.531s
// user	0m3.910s
// sys	0m3.331s
run_20fedora_kata -> 29.531

// Start 1 container
// real	0m0.361s
// user	0m0.011s
// sys	0m0.028s
boot_1busybox_runc -> 0.361

// real	0m7.175s
// user	0m0.018s
// sys	0m0.045s
boot_1busybox_kata -> 7.175

// Start 20 containers
// real	0m7.921s
// user	0m0.265s
//sys	0m0.525s
boot_20busybox_runc -> 7.921

// real	0m14.349s
// user	0m0.275s
// sys	0m0.539s
boot_20busybox_kata -> 14.349



// ============================================================================
//
section_slide "Disk I/O",
//
// ============================================================================
    title page_label
    subtitle
        $ "Disk performance with virtiofs:"
        $ "improved, but still not good"


disk_axis ->
    if stacked_item_sum > 120 then
        reference_scale 180, "3m"
        reference_tick  120, "2m"
        reference_tick   60, "1m"
        reference_tick   30, "30s"
        reference_tick   10, "10s"
    else if stacked_item_sum > 60 then
        reference_scale 120, "2m"
        reference_tick   90, "1m30"
        reference_tick   60, "1m"
        reference_tick   30, "30s"
    else if stacked_item_sum > 30 then
        reference_scale 60, "1m"
        reference_tick  30, "30s"
    else if stacked_item_sum > 20 then
        reference_scale 30, "30s"
        reference_tick  20, "20s"
        reference_tick  10, "10s"
    else
        reference_scale 20, "20s"
        reference_tick  10, "10s"




// ---------------------------------------------------------------------------
base_slide "Disk read overhead",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Copy files from the local file system"
    slide_picture "Disk.jpg", 10%, 250

    stepping
    picture
        anim_step integer(smooth_step + 0.5)
        disk_tar_scale -> anim 0.0, 0=10.0, 2=5.0, 3=3.0
        stacked_item_scale := disk_tar_scale
        stacked_item_sum := 0.0

        translate 0, -200, 0

        bar_graph_unit "s"

        bar_graph 0,   disk_tar_runc_sys, disk_tar_runc, "runc"
        bar_graph 1,   disk_tar_runc_blk_sys, disk_tar_runc_blk, "runc+blk"
        bar_graph 2,   disk_tar_kata_sys, disk_tar_kata, "Kata+virtiofs"
        bar_graph 3,   disk_tar_kata9p_sys, disk_tar_kata9p, "Kata+9pfs"
        bar_graph 4,   disk_tar_kata_blk_sys, disk_tar_kata_blk, "Kata+blk"

        last_graph 5,
            * "File reads are markedly slower with Kata"
            * "virtiofs improves a lot over 9pfs"
            * "Kata benefits less from blk than runc"

        disk_axis

        // tar read: time (for ((I=0; I < 20; I++)); do echo $I; tar cf /tmp/usr.tar usr; done)
        // runc
        // real	0m34.775s user	0m0.750s sys	0m5.048s
        disk_tar_runc         -> 34.775
        disk_tar_runc_sys     -> 5.048

        // real	1m15.780s user	0m1.136s sys	0m9.727s
        disk_tar_kata         -> 75.780
        disk_tar_kata_sys     -> 9.727

        // real	2m52.740s user	0m1.310s sys	0m10.733s (many errors)
        disk_tar_kata9p       -> 172.740
        disk_tar_kata9p_sys   -> 10.733

        // real	0m20.348s user	0m0.916s sys	0m4.946s
        disk_tar_runc_blk     -> 20.348
        disk_tar_runc_blk_sys -> 4.946

        // real	1m8.298s user	0m1.123s sys	0m9.978s
        disk_tar_kata_blk     -> 68.298
        disk_tar_kata_blk_sys -> 9.978


// ---------------------------------------------------------------------------
base_slide "Disk write overhead",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Write a 1.0G file from /dev/random"
    slide_picture "Disk.jpg", 10%, 250

    stepping
    picture
        anim_step integer(smooth_step + 0.5)
        disk_dd_scale -> anim 0.0, 0=30.0
        stacked_item_scale := disk_dd_scale
        stacked_item_sum := 0.0

        translate 0, -200, 0

        bar_graph_unit "s"

        bar_graph 0,   disk_dd_runc_sys, disk_dd_runc, "runc"
        bar_graph 1,   disk_dd_kata_sys, disk_dd_kata, "Kata+virtiofs"
        bar_graph 2,   disk_dd_kata9p_sys, disk_dd_kata9p, "Kata+9pfs"
        bar_graph 3,   disk_dd_runc_blk_sys, disk_dd_runc_blk, "runc+blk"
        bar_graph 4,   disk_dd_runc_blk2_sys, disk_dd_runc_blk2, "rewrite runc+blk"
        bar_graph 5,   disk_dd_kata_blk_sys, disk_dd_kata_blk, "Kata+blk"
        bar_graph 6,   disk_dd_kata_blk2_sys, disk_dd_kata_blk2, "rewrite Kata+blk"

        last_graph 7,
            * "Kata with virtiofs outperforms runc here"
            * "Overwriting a file is more expensive"
            * "The effect is less marked with Kata"

        disk_axis

        // dd write: dd if=/dev/random of=/usr/glob bs=16384 count=65536
        // runc
        // real	0m15.167s user	0m0.043s sys	0m5.152s
        disk_dd_runc            -> 15.167
        disk_dd_runc_sys        -> 5.152

        // real	0m10.297s user	0m0.077s sys	0m5.902s
        disk_dd_kata            -> 10.297
        disk_dd_kata_sys        -> 5.902

        // real	real	0m18.321s user	0m0.044s sys	0m5.279s
        disk_dd_kata9p          -> 18.321
        disk_dd_kata9p_sys      -> 5.279

        // real	0m5.277s user	0m0.036s sys	0m4.698s
        disk_dd_runc_blk        -> 5.277
        disk_dd_runc_blk_sys    -> 4.698

        // First run: real	0m8.923s user	0m0.051s sys	0m5.073s
        disk_dd_kata_blk        -> 8.923
        disk_dd_kata_blk_sys    -> 5.073

        // Second run (file exists): real	0m15.663s user	0m0.040s sys	0m4.714s
        disk_dd_runc_blk2        -> 15.663
        disk_dd_runc_blk2_sys    -> 4.714

        // Second run real	real	0m9.174s user	0m0.074s sys	0m5.146s
        disk_dd_kata_blk2        -> 9.174
        disk_dd_kata_blk2_sys    -> 5.146



// ============================================================================
//
section_slide "Networking I/O",
//
// ============================================================================
    title page_label
    subtitle
        $ "Multiple networking configurations"
        $ "At least some of them should perform well"


net_axis ->
    if stacked_item_sum > 240 then
        reference_scale 360, "6m"
        reference_tick  180, "3m"
        reference_tick   60, "1m"
    else if stacked_item_sum > 120 then
        reference_scale 180, "3m"
        reference_tick  120, "2m"
        reference_tick   60, "1m"
        reference_tick   30, "30s"
        reference_tick   10, "10s"
    else if stacked_item_sum > 60 then
        reference_scale 120, "2m"
        reference_tick   90, "1m30"
        reference_tick   60, "1m"
        reference_tick   30, "30s"
    else if stacked_item_sum > 30 then
        reference_scale 60, "1m"
        reference_tick  30, "30s"
    else if stacked_item_sum > 20 then
        reference_scale 30, "30s"
        reference_tick  20, "20s"
        reference_tick  10, "10s"
    else
        reference_scale 20, "20s"
        reference_tick  10, "10s"


// ---------------------------------------------------------------------------
base_slide "Network overhead",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Read or write a 1G file from local server"
    slide_picture "Network card.png", 10%, 250

    stepping
    picture
        anim_step integer(smooth_step + 0.5)
        net_read_scale -> anim 0.0, 0=10.0, 6=1.5
        stacked_item_scale := net_read_scale
        stacked_item_sum := 0.0

        translate 0, -200, 0

        bar_graph_unit "s"

        bar_graph 0,   net_read_runc_sys, net_read_runc, "runc read"
        bar_graph 1,   net_read_kata_sys, net_read_kata, "kata read"
        bar_graph 2,   net_write_runc_sys, net_write_runc, "runc write"
        bar_graph 3,   net_write_kata_sys, net_write_kata, "kata write"
        bar_graph 4,   net_local_read_runc_sys, net_local_read_runc, "runc read host"
        bar_graph 5,   net_local_read_kata_sys, net_local_read_kata, "kata read host"
        bar_graph 6,   net_local_write_runc_sys, net_local_write_runc, "runc write host"
        bar_graph 7,   net_local_write_kata_sys, net_local_write_kata, "kata write host"

        last_graph 8,
            * "Kata overhead is modest"
            ** "Lower system usage in guest (moved to host)"
            * "Host networking is rather bad for Kata"
            ** "Writing is really bad"

        net_axis


        // runc read real	0m42.238s user	0m2.833s sys	0m8.870s
        net_read_runc            -> 42.328
        net_read_runc_sys        -> 8.870

        // kata read real	0m43.324s user	0m2.590s sys	0m6.145s
        net_read_kata            -> 43.324
        net_read_kata_sys        -> 6.145

        // runc write: real	0m41.703s user	0m2.455s sys	0m2.952s
        net_write_runc           -> 41.703
        net_write_runc_sys       -> 2.952

        // kata write: real	0m43.462s user	0m2.931s sys	0m3.712s
        net_write_kata           -> 43.462
        net_write_kata_sys       -> 3.712

        // Runs from local diskL writes are really bad

        // scp from 10G disk: real	0m38.310s user	0m11.616s sys	0m27.543s
        net_local_read_runc            -> 38.310
        net_local_read_runc_sys        -> 27.543

        // scp from 10G disk: real	0m56.346s user	0m13.306s sys	0m29.037s
        net_local_read_kata            -> 56.346
        net_local_read_kata_sys        -> 29.037

        // scp to 10G disk: real	4m53.355s user	0m8.569s sys	0m19.197s
        net_local_write_runc           -> 293.355
        net_local_write_runc_sys       -> 19.197

        // scp to 10G disk: real	5m30.406s user	0m25.134s sys	0m48.085s
        net_local_write_kata           -> 338.406
        net_local_write_kata_sys       -> 48.085


// ----------------------------------------------------------------------------
base_slide "Network bandwidth",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Path length increase make it harder to saturate link"
    slide_picture "Network card.png", 3%, 300
    stepping

    one_picture
        image 0, 0, 70%, 70%, "Kata Network Bandwidth.png"

        translate 0, -400, 0
        last_graph 2,
            * "Hot-plugged vCPUs don't help much"
            * "Increased path length, notably on the host"

// ----------------------------------------------------------------------------
base_slide "Network latency",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Strong dependency on cgroup limits"
    slide_picture "Network card.png", 3%, 300
    stepping

    one_picture
        image -250 * fade_at(smooth_step, 2), 50, 60%, 60%, "Kata Network Latency.png"

        translate 0, -400, 0
        last_graph 2,
            * "Need > 2 VCPUs"
            * "CPU constraints hurt"



// ============================================================================
//
section_slide "Conclusion",
//
// ============================================================================
    title page_label
    subtitle
        $ "Confidential Containers are an opportunity"
        $ "but a real challenge in terms of performance"


// ---------------------------------------------------------------------------
base_slide "Key takeaways",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "High cost of confidentiality and sandboxing"
    slide_picture "Pile of Cash.png", 0%, 250
    stepping
    story
        * { text "The motto """; italic "The speed of containers"; text """ applies to deployments" }
        ** "Application development cycles are as fast as with other runtimes"
        ** "Performance in containers may / does vary"

        * "Memory overhead is large, but fixed and predictable"
        ** "At the moment, in the order of 350M per pod on average"
        ** "Likely to double with confidential containers"

        * "Disk and network overhead are large by default"
        ** "Confidential computing adds disk usage for images"
        ** "Technologies such as SR-IOV and VDPA are necessary"

        * "Watch out for upcoming blogs"


// ============================================================================
//
section_slide "Thank you",
//
// ============================================================================
    title page_label
    subtitle presentation_url
    stepping

    contents 0,
        text_box 200, -400, 600, 200,
            style "story"
            font_size 30
            anchor
                color "white"
                image -80, -40, 10%, 10%, "Tao3D.png"
            paragraph "This Tao3D presentation is available at"
            paragraph presentation_tao
    title_slide_logo



// ============================================================================
//
//   Overview diagram
//
// ============================================================================
// 0: Your software on hardware
// 1: Your software conflicting with other software
// 2: Operating system: takes control
// 3: Chroot: Carve out your little disk space
// 4: Virtualization: Carve out your whole machine
// 5: qemu
// 6: kvm
// 7: Containers: Carve out the whole thing
// 8: Multiplication of containers
// 9: Docker: declarative software components (dockerd)
// 10: Kubernetes: declarative orchestration (kubelet)
// 11: CRI / CRI-O: Runtime abstraction
// 12: KubeVirt: manage VMs with k8s
// 13: Kata: put containers in their own VM
// 14: qemu-mini

OWS_SW          -> 0
OWS_HW          -> 1
OWS_CLASH       -> 2
OWS_OS          -> 3
OWS_CHROOT      -> 4
OWS_VIRT        -> 5
OWS_QEMU        -> 6
OWS_KVM         -> 7
OWS_CNTN        -> 8
OWS_MANY        -> 9
OWS_DOCKER      -> 10
OWS_K8S         -> 11
OWS_CRI         -> 12
OWS_KVIRT       -> 13
OWS_KATA        -> 14
OWS_MINI        -> 15

overview Step:integer ->
// ----------------------------------------------------------------------------
//   Overview diagram for "simplified overview" slide
// ----------------------------------------------------------------------------
    anim_step Step

    overview_adjust S:real ->
        translate 0, -100 * S, -50 * S
        scale 100% - 30% * S

    locally
        overview_adjust anim(0.0, OWS_SW = 0, OWS_DOCKER = 1)

        locally
            at_step OWS_HW
            soft_box -630, -220, redhat_red2,
                image 0, 0, 60%, 60%, "Hard Disk.png"
            soft_box -210, -220, redhat_red2,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box 210,  -220, redhat_red2,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box 630, -220, redhat_red2,
                image 0, 0, 50%, 50%, "Network card.png"

        COUNT -> anim 1.0, OWS_SW = 1, OWS_MANY = 12, OWS_KVIRT = 4, OWS_KATA=8

        ys_x -> anim    0.0, OWS_SW =    0, OWS_CLASH = -630, OWS_VIRT = -630, OWS_CNTN = -630, OWS_KVIRT=-630
        ys_y -> anim    0.0, OWS_SW =    0, OWS_OS    =  220, OWS_VIRT =  250, OWS_CNTN =  220, OWS_KVIRT= 250
        ys_w -> anim 1650.0, OWS_SW = 1650, OWS_CLASH =  400, OWS_VIRT =  400, OWS_CNTN =  400, OWS_KVIRT= 400
        ys_h -> anim  200.0, OWS_SW =  200,                   OWS_VIRT =  150, OWS_CNTN =  200, OWS_KVIRT= 150
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            show exp(-0.1 * I)
            soft_box ys_x, ys_y, ys_w, ys_h, redhat_blue1, "Your software" fr "Votre logiciel"

        ts_x -> anim 2000.0, OWS_SW = 2000, OWS_CLASH = -210
        ts_y -> anim    0.0, OWS_SW =    0, OWS_OS    =  220
        ts_w -> anim  400.0, OWS_SW =  400
        ts_h -> anim  200.0, OWS_SW =  200
        locally
            show anim (0.0, OWS_SW=0, OWS_CLASH=1, OWS_VIRT=0.5, OWS_CNTN=0)
            soft_box ts_x, ts_y, ts_w, ts_h, redhat_blue2, "Their software" fr "Leur logiciel"
            soft_box ts_x + 420.0, ts_y, ts_w, ts_h, redhat_blue2, "Some software" fr "Un logiciel"
            soft_box ts_x + 840.0, ts_y, ts_w, ts_h, redhat_blue2, "Other software" fr "Un autre logiciel"

        at_step OWS_OS
        os_x -> anim    0.0, OWS_SW =    0
        os_y -> anim    0.0, OWS_SW =    0, OWS_VIRT = -60, OWS_CNTN =   0, OWS_KVIRT=-60
        os_w -> anim 1650.0, OWS_SW = 1650
        os_h -> anim  200.0, OWS_SW =  200, OWS_VIRT = 100, OWS_CNTN = 200, OWS_KVIRT=100
        soft_box os_x, os_y, os_w, os_h, redhat_green1, "Operating system" fr "Système d'exploitation"

        locally
            show anim (0.0, OWS_SW=0, OWS_CHROOT=1, OWS_VIRT=0)
            soft_box -550, 100, 200, 200, redhat_red2,
                paragraph "chroot"
                image 0, 0, 50%, 50%, "Hard Disk.png"

        at_step OWS_VIRT
        vi_x -> anim -630.0, OWS_SW = -630,                 OWS_CNTN = -3000, OWS_KVIRT=-630
        vi_y -> anim   60.0, OWS_SW =   60, OWS_VIRT = 60
        vi_w -> anim  400.0, OWS_SW =  400
        vi_h -> anim  200.0, OWS_SW =  200, OWS_VIRT = 180
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            show exp(-0.1 * I)
            soft_box vi_x, vi_y, vi_w, vi_h, redhat_orange1, "Virtual Machine" fr "Machine virtuelle"

        vm_x -> anim 0.0, OWS_SW = 0, OWS_VIRT = -630
        vm_y -> anim 0.0, OWS_SW = 0, OWS_VIRT =  180
        vm_s -> anim 1.0, OWS_SW = 1, OWS_VIRT =   25%
        vm_c -> anim 1.0, OWS_SW = 1, OWS_CNTN = 0, OWS_KVIRT=1
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            translate vm_x, vm_y, 10
            scale vm_s
            soft_box os_x, os_y, os_w * vm_c, os_h * vm_c, redhat_green1, "Operating system" fr "Système d'exploitation"
            soft_box -630, -220, redhat_red2,
                image 0, 0, 60%, 60%, "Hard Disk.png"
            soft_box -210, -220, redhat_red2,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box 210,  -220, redhat_red2,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box 630, -220, redhat_red2,
                image 0, 0, 30%, 30%, "Network card.png"

        locally
            show anim (0.0, OWS_SW=0, OWS_QEMU=1, OWS_CNTN=0)
            qe_x -> anim -630.0, OWS_SW = -630, OWS_QEMU = -350, OWS_CNTN=-3000
            qe_y -> anim   60.0, OWS_SW =   60, OWS_QEMU =   50
            qe_w -> anim  400.0, OWS_SW =  400, OWS_QEMU =  300
            qe_h -> anim  180.0, OWS_SW =  180, OWS_QEMU =   80
            soft_box qe_x, qe_y, qe_w, qe_h, redhat_orange2, "qemu/libvirt"

        locally
            show anim (0.0, OWS_SW=0, OWS_KVM=1, OWS_CNTN=0)
            kv_x -> anim -630.0, OWS_SW = -630, OWS_KVM  = -630, OWS_CNTN=-3000
            kv_y -> anim   60.0, OWS_SW =   60, OWS_KVM  =  -30
            kv_w -> anim  400.0, OWS_SW =  400, OWS_KVM  =  300
            kv_h -> anim  180.0, OWS_SW =  180, OWS_KVM  =   80
            soft_box kv_x, kv_y, kv_w, kv_h, redhat_orange3, "kvm"

        at_step OWS_MINI
        qm_x -> anim -630.0, OWS_SW = -630, OWS_MINI= -630
        qm_y -> anim  -20.0, OWS_SW =  -20, OWS_MINI=  -20
        qm_w -> anim  250.0, OWS_SW =  250, OWS_MINI=  250
        qm_h -> anim   80.0, OWS_SW =   80, OWS_MINI=   80
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            soft_box qm_x, qm_y, qm_w, qm_h, redhat_orange2, "qemu-mini"

    locally
        show anim (0.0, OWS_SW=0, OWS_DOCKER=1, OWS_KVIRT=0, OWS_KATA=1)
        do_x -> anim    0.0, OWS_SW =    0, OWS_DOCKER =    0
        do_y -> anim  300.0, OWS_SW =  300, OWS_DOCKER =  300
        do_w -> anim 1100.0, OWS_SW = 1100, OWS_DOCKER = 1100
        do_h -> anim  200.0, OWS_SW =  280, OWS_DOCKER =  200
        soft_box do_x, do_y, do_w, do_h, redhat_ocean1,
            image 0, 20, 20%, 20%, "Logo-Red_Hat-Marketplace-Operated_By_IBM-B-Standard-RGB.png"

    at_step OWS_K8S
    ku_x -> anim -650.0, OWS_SW = -650, OWS_DOCKER = -750
    ku_y -> anim   30.0, OWS_SW =   30, OWS_DOCKER =   30
    ku_w -> anim  300.0, OWS_SW =  300, OWS_DOCKER =  300
    ku_h -> anim  700.0, OWS_SW =  780, OWS_DOCKER =  700
    soft_box ku_x, ku_y, ku_w, ku_h, redhat_yellow1,
        image 0, 20, 25%, 25%, "OpenShift.png"

    at_step OWS_CRI
    cr_x -> anim -550.0, OWS_SW = -550, OWS_CRI = -550
    cr_y -> anim  -20.0, OWS_SW =  -20, OWS_CRI =  -20, OWS_KVIRT=-120
    cr_w -> anim  200.0, OWS_SW =  200, OWS_CRI =  200
    cr_h -> anim   80.0, OWS_SW =   80, OWS_CRI =   80
    soft_box cr_x, cr_y, cr_w, cr_h, redhat_orange4, "CRI"


// ============================================================================
//
//   Confidential Containers
//
// ============================================================================

CNF_START       -> 0            // Blank
CNF_HOST        -> 1            // Show the host
CNF_RESOURCES   -> 2            // Resources
CNF_CONTAINERS  -> 3            // Containers
CNF_SANDBOX_OUT -> 4            // Sandboxing going out
CNF_SANDBOX_IN  -> 5            // Sandboxing going in
CNF_TENANTS     -> 6            // Multiple tenants
CNF_SAFE_TODAY  -> 7            // What is safe today
CNF_MEMORY_VM   -> 8            // Memory in the guest
CNF_MEMORY_HOST -> 9            // Memory encryption
CNF_INTEGRITY   -> 10           // State integrity
CNF_ATTESTATION -> 11           // Attestation
CNF_LAST        -> 11

confidential Step:integer ->
// ----------------------------------------------------------------------------
//   Overview diagram for "simplified overview" slide
// ----------------------------------------------------------------------------
    anim_step Step

    locally
        light 0
        light_position 50, 50, 120

        rotate_x 10
        rotate_y 10 * sin (0.3 * time)

        locally
            color "lightgray"
            scale fade_at(smooth_step, CNF_HOST)
            cube 0, 0, -150, 1500, 400, 300

            color "black"
            text_box 0,0, 1500, 400,
                style "story"
                align 90%
                vertical_align 95%
                $ "Virtual machine host" fr "Hébergeur de machines virtuelles"

        locally
            color safe_color CNF_ATTESTATION
            translate 0, -270, 0
            scale fade_at(smooth_step, CNF_RESOURCES)
            cube 0, 0, -150, 1500, 100, 300

            color "black"
            text_box 0,0, 1500, 100,
                style "story"
                color "lightgray"
                align 90%
                vertical_align 95%
                $ "Physical resources" fr "Ressources physiques"

            translate -300, 0, 25
            scale 50%
            extrude_depth 20
            extrude_radius 20
            soft_box -630, -20, safe_color CNF_INTEGRITY,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box -210, -20, safe_color CNF_MEMORY_HOST,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box  210,  -20, safe_color CNF_SAFE_TODAY,
                image 0, 0, 60%, 60%, "Hard Disk.png"
            soft_box  630, -20, safe_color CNF_SAFE_TODAY,
                image 0, 0, 50%, 50%, "Network card.png"


        locally
            CONTAINERS_COUNT -> anim 0.0, CNF_START=0, CNF_CONTAINERS=12
            for I in  0..integer(CONTAINERS_COUNT)-1 loop locally
                color_hsv I * 37, 80%, 80%
                cube -650 + 120 * I, 0, 100, 100, 100, 100

            at_step CNF_CONTAINERS
            color "black"
            text_box 0, 50, 1500, 100,
                style "story"
                align 50%
                vertical_align 5%
                $ "Containers" fr "Conteneurs"


        locally
            extrude_depth 50
            translate -410, -50, 200
            rotate_x -40
            locally
                color "red"
                rotate_z -90
                scale fade_between(smooth_step, CNF_SANDBOX_OUT, CNF_SANDBOX_IN)
                arrow 0, 0, 100, 100, 50, 60%
                translate_z 20
                rotate_z 45
                cube 0, 0, 0, 120, 10, 10
                rotate_z 90
                cube 0, 0, 0, 120, 10, 10
            locally
                translate 120, 0, 0
                color "green"
                rotate_z 90
                scale fade_between(smooth_step, CNF_SANDBOX_IN, CNF_SANDBOX_IN)
                arrow 0, 0, 100, 100, 50, 60%
                color "white"
                rotate_z 90
                extrude_depth 0
                image 0, 90 + 50 * sin(1.1*time), 10%, 10%, "BlueEyeIcon.png"

        locally
            show fade_between(smooth_step, CNF_TENANTS, CNF_TENANTS)
            translate -120, 0, 150
            for I in 0..3 loop
                image I * -120 - 60, 0, 1%, 1%, "Apple.png"
            image 320, 0, 10%, 10%, "Samsung.png"
            image 520, 0, 10%, 10%, "Samsung.png"

        memory_cone Color, X, Y, Z, Start, Stop, Body ->
            locally
                color Color
                translate X, Y, Z
                locally
                scale fade_between(smooth_step, Start, Stop)
                rotate_y 10 * sin (0.32 * time)
                rotate_x 150
                truncated_cone 0, 0, -200, 100, 100, 400, 0.0
                rotate_x 180
                translate_z 400
                frame_texture 512, 150,
                    color "white"
                    rectangle 999, 999
                    text_box 0, 0, 450, 200,
                        style "story"
                        align 50%
                        vertical_align 50%
                        Body
                texture_transform
                    scale 1, 3, 1
                    translate_y -0.3 * time mod 1
                    texture_wrap true, true
                ellipse 0, 0, 200, 200

        locally
            refresh 0
            memory_cone "lightblue", -290, 0, 120, CNF_MEMORY_VM, CNF_INTEGRITY,
                text "Hello World, value " fr "Hello, la valeur " & integer(time * 40 mod 1000)
                line_break
                text "is absolutely secret!" fr "est un secret!"
            memory_cone "lightgreen", -410, -250, 0, CNF_MEMORY_HOST, CNF_MEMORY_HOST,
                text "h3110 W0r1D; vA1u3 " fr "h3110; 1Ӓ √@Ĺ€ŮŘ " & integer(time * 40 mod 997)
                line_break
                text "15 @B501ùT31y 53cR3t¡" fr "35T ùN 53kŕ37¡"

        only_at CNF_INTEGRITY,
            for I in 0..1 loop locally
                translate -600 + 200 * I, -200 + 20 * sin((3.41 + I) * time), 100

                locally
                    color "white"
                    translate_z 125
                    extrude_depth 20
                    rectangle 0, 120, 180, 120
                    extrude_depth 0
                    text_box 0, 120, 150, 100,
                        font "Menlo", 14
                        color "darkblue"
                        align 0
                        if I = 0 then
                            $ "RAX = 0x0BADDA7A"
                            $ "RCX = 0x0BADC0DE"
                            $ "CR3 = 0xDEADBEEF"
                        else
                            $ "while (*ptr++=0);"
                            $ "if (!dead)"
                            $ "    goto retry;"

                rotate_z -90
                color "red"
                scale fade_between(smooth_step, CNF_INTEGRITY, CNF_INTEGRITY)
                arrow 0, 0, 100, 100, 50, 60%
                color "darkred"
                translate_z 20
                rotate_z 45
                cube 0, 0, 0, 120, 10, 10
                rotate_z 90
                cube 0, 0, 0, 120, 10, 10

        only_at CNF_ATTESTATION,
            color "green"
            font "Arial Unicode MS", 160
            align 50%
            vertical_align 50%
            extrude_depth 55
            translate_z 50
            text_box 700, -210, 100, 100, { text "✓" }
            text_box 700,  250, 100, 100, { text "✓" }
            translate_z 140
            text_box -360,  80, 100, 100, { text "✓" }
            text_box 480,   80, 100, 100, { text "✓" }
            text_box 360,   80, 100, 100, { text "✓" }

     at_step CNF_LAST
     if integer(smooth_step + 0.5) in CNF_MEMORY_VM..CNF_INTEGRITY then refresh 0

     safe_color Limit ->  if integer(smooth_step + 0.5) < Limit then redhat_red1 else "darkgreen"



// ============================================================================
//
//    Kata Containers animation
//
// ============================================================================

KC_OPENSHIFT    ->  1
KC_KUBELET      ->  2
KC_CRI          ->  3
KC_RUNC         ->  4
KC_CONTAINER    ->  5
KC_CNI_AND_CSI  ->  6
KC_STORAGE      ->  7
KC_KATA_SHIM    ->  8
KC_HYPERVISOR   ->  9
KC_VM           -> 10
KC_KATA_AGENT   -> 11
KC_KATA_CTR     -> 12
KC_CTR_ECOSYS   -> 13
KC_VM_ISOL      -> 14

KC_CONFIDENTIAL -> KC_VM_ISOL
KC_LINUX_KERNEL -> KC_CONFIDENTIAL + CC_LINUX_KERNEL
KC_FIRMWARE     -> KC_CONFIDENTIAL + CC_FIRMWARE
KC_SHIM_V2      -> KC_CONFIDENTIAL + CC_SHIM_V2
KC_CC_HYPERVISOR-> KC_CONFIDENTIAL + CC_HYPERVISOR
KC_ENCRYPTING   -> KC_CONFIDENTIAL + CC_ENCRYPTING
KC_RELYING      -> KC_CONFIDENTIAL + CC_RELYING
KC_PLATFORM     -> KC_CONFIDENTIAL + CC_PLATFORM
KC_HOST         -> KC_CONFIDENTIAL + CC_HOST
KC_TENANT       -> KC_CONFIDENTIAL + CC_TENANT

CC_LINUX_KERNEL ->  1
CC_FIRMWARE     ->  2
CC_SHIM_V2      ->  3
CC_HYPERVISOR   ->  4
CC_ENCRYPTING   ->  5
CC_RELYING      ->  6
CC_PLATFORM     ->  7
CC_HOST         ->  8
CC_TENANT       ->  9

KC_ENABLEMENT   -> KC_TENANT
KC_HARDWARE     -> KC_ENABLEMENT + HE_HARDWARE
KC_FIRMWARE_CC  -> KC_ENABLEMENT + HE_FIRMWARE_CC
KC_RUNTIME_CC   -> KC_ENABLEMENT + HE_RUNTIME_CC
KC_HYPER_CC     -> KC_ENABLEMENT + HE_HYPER_CC
KC_KERNEL       -> KC_ENABLEMENT + HE_KERNEL
KC_AGENTCC      -> KC_ENABLEMENT + HE_AGENTCC
HE_HARDWARE     -> 1
HE_FIRMWARE_CC  -> 2
HE_KERNEL       -> 3
HE_RUNTIME_CC   -> 4
HE_HYPER_CC     -> 5
HE_AGENTCC      -> 6



kata_containers Step:integer ->
// ----------------------------------------------------------------------------
//   Representation of kata containers
// ----------------------------------------------------------------------------
    anim_step Step

    at_anim KC_OPENSHIFT
    image -700, 370, 12%, 12%, "Logo-Red_Hat-Marketplace-Operated_By_IBM-B-Standard-RGB.png"
    at_anim KC_KUBELET
    framed_box "#38E", -700, 300, 300, 80, "Kubelet"
    at_anim KC_CRI
    framed_box "#38E", -250, -300, 1200, 80, "CRI (cri-o or containerd)" fr "CRI (cri-o ou containerd)"
    locally
        line_color "#38E"
        line_width 15
        line_arrow -700, 280, none, -700, -280, arrowhead

    at_anim KC_RUNC
    framed_box "#14A",  -300, -200, 400, 80, "Runtime (runc)"
    at_anim KC_CONTAINER
    framed_box "#026",  -300, -50, 400, 200, ""
    framed_box "#026",  -300, -50, 380, 180, "Container" fr "Conteneur"

    at_anim KC_CNI_AND_CSI
    framed_box "#38E",  490, -300, 220, 80, "CNI"
    framed_box "#38E",  740, -300, 220, 80, "CSI"
    image 490, -220, 40%, 40%, "Network card.png"
    image 740, -220, 50%, 50%, "Hard Disk.png"

    at_anim KC_STORAGE
    locally
        line_color anim_text("#38E", KC_ENCRYPTING = "#3A5")
        color anim_text("#38E", KC_ENCRYPTING = "#3A5"), 80%
        line_width 5
        rounded_rectangle 740, 120, 160, 140, 20
    locally
        color "#CDF"
        image 760, 140, 40%, 40%, "Hard Disk.png"
        image 740, 120, 40%, 40%, "Hard Disk.png"
        image 720, 100, 40%, 40%, "Hard Disk.png"
    locally
        line_color "#38E"
        line_width 15
        line_arrow 740, 60, arrowhead, 740, -180, arrowhead

    text_box 500, 120, 250, 160,
        color "#02B"
        font "Overpass", "Arial", 30
        align 100%
        vertical_align 50%
        if anim_step >= KC_ENCRYPTING then
            color "#082"
            $ "Encrypted" fr "Chiffrage des"
        $ "Images &"
        $ "Volumes"

    at_anim KC_KATA_SHIM
    framed_box anim_text("#1A4", KC_SHIM_V2 = "#A21"),   150, -200, 400, 80, "Runtime (shim-v2)"
    at_anim KC_HYPERVISOR
    framed_box anim_text("#061", KC_CC_HYPERVISOR = "#610"),   150, -100, 400, 80, "Hypervisor (qemu)"
    at_anim KC_VM
    framed_box "#3C6",   150, 160, 420, 400, { vertical_align 100%; $ "VM (Linux)" }
    at_anim KC_KATA_AGENT
    framed_box "#062",   150, 100, 400,  80, "Kata Agent"
    at_anim KC_KATA_CTR
    framed_box "#062",   150, 250, 400, 200, ""
    framed_box "#062",   150, 250, 380, 180, "Container" fr "Conteneur"

    at_anim KC_LINUX_KERNEL
    framed_box "#E22",     0, -400, 1700, 80, "Linux kernel" fr "Noyau Linux"
    at_anim KC_FIRMWARE
    framed_box "#811",     0, -500, 1700, 80, "Firmware / Hardware" fr "Microgiciel / Matériel"

    at_anim KC_RELYING
    locally
        line_color "#0A4"
        color "#0A4", 20%
        translate 1100, 250, 0
        path
            move_to 0, 100
            for I in 1..16 loop
               quad_to (230 + 5 * sin I) * sin((I - 0.5) * pi / 8), (120 + 7 * sin I) * cos((I - 0.5) * pi / 8), 200 * sin(I * pi / 8), 100 * cos(I * pi / 8)
    locally
        line_color "#0A4"
        line_width 8
        line_arrow 350, 250, arrowhead, 920, 250, arrowhead
    text_box 1100, 250, 300, 80,
        style "story"
        font_size 30
        color "#081"
        align 0.0
        vertical_align 0.5
        $ "Relying party" fr "Contrôleur"
    show 0.99
    framed_box "#0A4",   1250, 300, 280, 80, {font_size 26; text "Key broker" fr "Accès aux clefs" }
    framed_box "#0A4",   1250, 200, 280, 80, {font_size 26; text "Attestation service" fr "Serveur d'attestation" }

    locally
        line_color "#E22"
        color "transparent"
        line_width 6 + 2 * sin(2.5 * time)
        at_anim KC_HARDWARE
        rectangle 5, -500, 1710, 80
        at_anim KC_FIRMWARE_CC
        at_anim KC_KERNEL
        rectangle 5, -400, 1710, 80
        at_anim KC_RUNTIME_CC
        rectangle 155, -200, 400, 80
        at_anim KC_HYPER_CC
        rectangle 155, -100, 400, 80
        at_anim KC_AGENTCC
        rectangle 155, 100, 400,  80



// ============================================================================
//
//   Utlities
//
// ============================================================================

caption_at TimeSlot, Body ->
// ----------------------------------------------------------------------------
//   Show the caption at the given time
// ----------------------------------------------------------------------------
    only_at TimeSlot,
        soft_box -700, 500, 400, 200, "#444", Body


page_quote N ->
// ----------------------------------------------------------------------------
//   Show a selected quote in a page
// ----------------------------------------------------------------------------
    on "pageentry",
        show_quote N
    on "pageexit",
        show_quotes_v := 0.0
        show_quotes := 0.0


show_quote N    ->
// ----------------------------------------------------------------------------
//   Show a selected quote from keyboard
// ----------------------------------------------------------------------------
    show_quotes := 1
    quote_step N
    refresh 0.1
    on "pageexit",
        show_quotes_v := 0.0
        show_quotes := 0.0

show_quotes     -> 0.0
show_quotes_v   -> 0.0

interpolate 10%, show_quotes, show_quotes_v
if show_quotes_v > 0.0 then
    show show_quotes_v
    quotes
        quote "For every problem, there is a solution that is simple, clean and wrong", "Henry Louis Mencken"
        quote "There is more than one way to do it", "Perl motto (Larry Wall)"
        quote "The good thing about standards is that there are so many to choose from.", "Andrew Tannenbaum"
        quote "Entropy, i.e. disorder,  always increases with time", "Second law of thermodynamics"
        quote "Get half of the right thing available so that it spreads like a virus. Once people are hooked on it, improve it to 90% of the right thing.", "Richard P. Gabriel"
        quote "Break it properly so that you can fix it properly", "Fabiano Fidêncio"
        quote "I love cunning containers as much as anyone, but I've found that if I get rid of everything I don't need, I often don't need a container at all.", "Gretchen Rubin"
