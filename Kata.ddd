presentation_title "Chains of trust in confidential computing - DevConf.cz 2023"
presentation_logo "ConfidentialContainersLogo.png"
presentation_url "https://github.com/c3d/presentations"
presentation_tao "https://github.com/c3d/presentations (branch devconfcz-2023-chains-of-trust)"
presentation_author "Christophe de Dinechin"
presentation_author_title "Senior Principal Software Engineer"
presentation_author_mail "dinechin@redhat.com"



// ----------------------------------------------------------------------------
main_title_slide "Main title",
// ----------------------------------------------------------------------------
    title
        $ "Chains of trust in"
        $ "Confidential Computing"
    subtitle
        $ "Knowing and verifying what you run"

    title_slide_author "Christophe.jpg",
        $ presentation_author
        $ { italic presentation_author_title }
        font "Overpass Mono"
        $ presentation_author_mail

    title_slide_logo


// ---------------------------------------------------------------------------
base_slide "Agenda",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Key topics we are going to cover today"
    slide_picture "Agenda.jpg", 0%, 320 // https://www.pexels.com/fr-fr/photo/programme-startup-a-faire-concept-7376/
    stepping
    story
        * "Overview of Confidential Computing"
        * "What is Attestation?"
        * "Use cases for Confidential Computing"
        * "From root of trust to actual trust"
        * "Platform-specific details"
        * "Supporting technologies"
        $
        * "See blog for more details"


    right_picture
        images "Complex Mechanism.jpg", "handing-over-keys.jpg", "Hackers.jpg", "Root of Trust.jpg", "Universal Power Adapter.jpg", "Eiffel Tower Foundations.jpg", "QRCode-CoCo-Primer.png"



// ============================================================================
//
section_slide "Confidential Computing",
//
// ============================================================================
    title page_label
    subtitle
        $ "Protecting data in-use"
    stepping
    page_quote 0



// ----------------------------------------------------------------------------
base_slide "Problem Statement",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Why should infrastructure see your data?" fr "Votre hébergeur peut-il voir vos données?"
    slide_picture "Confidential Computing.jpg", 5%, 350
    stepping

    picture
        caption_at CNF_HOST, "Software now runs on hardware you do not own, like a cloud provider" fr "Votre logiciel tourne maintenant sur l'ordi de quelqu'un d'autre"
        caption_at CNF_RESOURCES, "Hardware resources are owned by the host" fr "Les resources matérielles appartiennent en réalité à l'hébergeur qui les loue"
        caption_at CNF_CONTAINERS, "Containers carve out resources from the host" fr "Le conteneurs empruntent les resources dont ils ont besoin à cet hébergeur"
        caption_at CNF_SANDBOX_OUT, "Classical sandboxing only protects the host from the containers running on it" fr "L'isolation classique est conçue pour protéger l'hébergeur des conteneurs"
        caption_at CNF_SANDBOX_IN, "The host can freely peek inside the container, for example read its memory" fr "À l'inverse, l'hébergeur peut tout à fait regarder dans un conteneur"
        caption_at CNF_TENANTS, "For that reason, multiple tenants do not want to share hardware when processing sensitive data" fr "Des concurrents ne voudront pas partager le même matériel pour des données sensibles"
        caption_at CNF_SAFE_TODAY, "Data on disk or in network is already encrypted today, so the VM host cannot read it nor tamper with it" fr "Les données sur disque ou réseau sont déjà chiffrées aujourd'hui, donc OK"
        caption_at CNF_MEMORY_VM, "In non-CC architectures, data in memory is not encrypted, so it can be accessed by the host" fr "Pour les données en mémoire vive, il faut le nouveau matériel"
        caption_at CNF_MEMORY_HOST, "Encrypted memory stores live data as cypher text, so that it becomes garbled when read by the host" fr "Les données ainsi protégées deviennent illisibles pour l'hébergeur"
        caption_at CNF_INTEGRITY, "Integrity ensures the host cannot corrupt nor poison CPU state or RAM contents" fr "Il faut aussi protéger l'intégrité de l'état du CPU ou de la mémoire"
        caption_at CNF_ATTESTATION, "Attestation proves where you are running and what you are running" fr "L'attestation permet de contrôler ce qui tourne, mais aussi où ça tourne"
        confidential integer(smooth_step + 0.5)



// ----------------------------------------------------------------------------
base_slide "Root of Trust",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "First there was the hardware"
    slide_picture "TPM_Asus.jpg", 5%, 350
    stepping

    picture
        tpm_step        1, "#F00", -300, "Root of Trust (TPM)"
        tpm_step        2, "#F40", -200, "ROM-based boot"
        tpm_step        3, "#444", -100, "BIOS Phase 1"
        tpm_step        4, "#448",    0, "BIOS Phase 2"
        tpm_step        5, "#24C",  100, "Boot Manager"
        tpm_step        6, "#00F",  200, "Linux Kernel"
        tpm_step_final  7, "#080",  300, "Workload"

        tpm_step Step, Color, Y, Label ->
            locally
                at_step 3*Step - 1
                locally
                    translate_y Y
                    color "transparent"
                    line_color Color
                    line_width 8
                    path
                        move_to 300, 20
                        line_to 350, 20
                        line_to 350, 80
                        line_to 300, 80
                        endpoints_style "none", "arrowhead"
                text_box 570, Y + 50, 400, 90,
                    align 0%
                    vertical_align 50%
                    style "story"
                    color Color
                    font_size 30
                    text "Measures and launches"
            locally
                at_step 3*Step + 1
                locally
                    translate_y Y
                    color "transparent"
                    line_color Color
                    line_width 8
                    path
                        move_to -300, 100
                        line_to -350 - 30 * Step, 100
                        line_to -350 - 30 * Step, -300 - Y - Y / 10
                        line_to -300, -300 - Y - Y / 10
                        endpoints_style "none", "arrowhead"
                text_box -470, Y + 50, 400, 90,
                    align 100%
                    vertical_align 50%
                    style "story"
                    color Color
                    font_size 30
                    text "Records"
            tpm_step_final Step, Color, Y, Label
        tpm_step_final Step, Color, Y, Label ->
            at_step 3 * Step - 3
            framed_box Color, 0, Y, 600, 90, { render Label }


// ----------------------------------------------------------------------------
base_slide "Vendor landscape" fr "Les vendeurs et leur offre",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Different vendors with different approaches?" fr "Chaque vendeur a son approche bien à lui"
    slide_picture "Confidential Computing.jpg", 5%, 350
    stepping
    story
        * "AMD: Secure Encrypted Virtualization (SEV)"
        ** "SEV-ES adds Encrypted State (e.g. CPU register file)" fr "SEV-ES rajoute une protection de l'état CPU"
        ** "SEV-SNP adds Secure Nested Pages (integrity protection)" fr "SEV-SNP ajoute une notion d'intégrité"
        * "Intel: Trusted Domain Extensions (TDX)"
        * "IBM S390: Secure Execution (SE)"
        * "Power: Protected Execution Facility (PEF)"
        * "Arm: Confidential Computing Architecture (CCA)"
        * "All these technologies are based on virtualization" fr "Ces technologies sont toutes très virtuelles"
        * "They all work differently" fr "Elles fonctionnent toutes de façon différente"

    right_picture
        images "AMD SEV.png", "SEV-ES.png", "SEV-SNP.jpg", "Intel TDX.png", "S390 SE.jpg", "Power PEF.png", "Arm CCA.png", "Confidential VMs.jpg", "Zombie Apocalypse.jpg"

    right_picture
        entry_time -> 0.0
        if smooth_step < 9 then
            entry_time := page_time
        only_at 9,
            jump_factor -> fade_at(page_time - entry_time, 5)
            show sin(2.5 * time)^2
            translate 100 - 500 * jump_factor, 100 - 100 * fade_out(page_time, 10), 50 + 600 * jump_factor
            scale 1 + 5 * jump_factor + 0.3 * jump_factor * sin(45.3 * time)
            rotate_z 23 * sin((0.21 + 2.1 * jump_factor) * time) * (1.0 - 0.7 * jump_factor) + sin(30.2 * time) * jump_factor
            style "boxtitle"
            color_hsv 20 * time, 1, 1
            line_color "green"
            text_box 0, 0, 300, 200,
                vertical_align 0.5
                align 0.5
                $ "There be zombies!" fr "Des zombies partout!"




// ============================================================================
//
section_slide "Attestation",
//
// ============================================================================
    title page_label
    subtitle
        $ "Proving that you run what you want to run"



// ============================================================================
//
section_slide "Use Cases",
//
// ============================================================================
    title page_label
    subtitle
        $ "Various ways to deploy"
        $ "confidential computing"


// ============================================================================
//
section_slide "Building actual trust",
//
// ============================================================================
    title page_label
    subtitle
        $ "Keeping the trust alive along the way"


// ============================================================================
//
section_slide "Platform-specific details",
//
// ============================================================================
    title page_label
    subtitle
        $ "Beyond that point, there be zombies"


// ============================================================================
//
section_slide "Supporting technologies",
//
// ============================================================================
    title page_label
    subtitle
        $ "The flavor is in the details"




// ============================================================================
//
section_slide "Conclusion" fr "Conclusion",
//
// ============================================================================
    title page_label
    subtitle
        $ "Confidential computing is complicated."
        $ "We are building the tools to make it simpler."


// ---------------------------------------------------------------------------
base_slide "Key takeaways" fr "Ce qu'il faut retenir",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "High cost of confidentiality and sandboxing" fr "Un coût élevé pour la sécurité et l'isolation"
    slide_picture "Pile of Cash.png", 0%, 250
    stepping
    story
        * "Confidential computing impacts many aspects of a VM"
        * "The integration is there, but it is not easy yet"
        * "We are building the tools to make it easier"
        * "Historical tools can bite you in unexpected ways"


// ============================================================================
//
section_slide "Thank you" fr "Merci",
//
// ============================================================================
    title page_label
    subtitle "Now is a good time for questions" fr "Il est l'heure de passer aux questions"
    stepping

    contents 0,
        text_box 200, -400, 600, 200,
            style "story"
            font_size 30
            anchor
                color "white"
                image -80, -40, 10%, 10%, "Tao3D.png"
            paragraph "This Tao3D presentation is available at" fr "Cette présentation peut être téléchargée à "
            paragraph presentation_tao

    translate_y -50
    picture
        color "white"
        image 600, -80, 200%, 200%, "QRCode.jpg"


show_overflow -> 0
key "Control-Shift-O" ->
    show_overflow := 1 - show_overflow
    refresh 0
if show_overflow > 0 then
    import "overflow.ddd"



// ============================================================================
//
//   Overview diagram
//
// ============================================================================
// 0: Your software on hardware
// 1: Your software conflicting with other software
// 2: Operating system: takes control
// 3: Chroot: Carve out your little disk space
// 4: Virtualization: Carve out your whole machine
// 5: qemu
// 6: kvm
// 7: Containers: Carve out the whole thing
// 8: Multiplication of containers
// 9: Docker: declarative software components (dockerd)
// 10: Kubernetes: declarative orchestration (kubelet)
// 11: CRI / CRI-O: Runtime abstraction
// 12: KubeVirt: manage VMs with k8s
// 13: Kata: put containers in their own VM
// 14: qemu-mini

OWS_SW          -> 0
OWS_HW          -> 1
OWS_CLASH       -> 2
OWS_OS          -> 3
OWS_CHROOT      -> 4
OWS_VIRT        -> 5
OWS_QEMU        -> 6
OWS_KVM         -> 7
OWS_CNTN        -> 8
OWS_MANY        -> 9
OWS_DOCKER      -> 10
OWS_K8S         -> 11
OWS_CRI         -> 12
OWS_KVIRT       -> 13
OWS_KATA        -> 14
OWS_MINI        -> 15

overview Step:integer ->
// ----------------------------------------------------------------------------
//   Overview diagram for "simplified overview" slide
// ----------------------------------------------------------------------------
    anim_step Step

    overview_adjust S:real ->
        translate 0, -100 * S, -50 * S
        scale 100% - 30% * S

    locally
        overview_adjust anim(0.0, OWS_SW = 0, OWS_DOCKER = 1)

        locally
            at_step OWS_HW
            soft_box -630, -220, redhat_red2,
                image 0, 0, 60%, 60%, "Hard Disk.png"
            soft_box -210, -220, redhat_red2,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box 210,  -220, redhat_red2,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box 630, -220, redhat_red2,
                image 0, 0, 50%, 50%, "Network card.png"

        COUNT -> anim 1.0, OWS_SW = 1, OWS_MANY = 12, OWS_KVIRT = 4, OWS_KATA=8

        ys_x -> anim    0.0, OWS_SW =    0, OWS_CLASH = -630, OWS_VIRT = -630, OWS_CNTN = -630, OWS_KVIRT=-630
        ys_y -> anim    0.0, OWS_SW =    0, OWS_OS    =  220, OWS_VIRT =  250, OWS_CNTN =  220, OWS_KVIRT= 250
        ys_w -> anim 1650.0, OWS_SW = 1650, OWS_CLASH =  400, OWS_VIRT =  400, OWS_CNTN =  400, OWS_KVIRT= 400
        ys_h -> anim  200.0, OWS_SW =  200,                   OWS_VIRT =  150, OWS_CNTN =  200, OWS_KVIRT= 150
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            show exp(-0.1 * I)
            soft_box ys_x, ys_y, ys_w, ys_h, redhat_blue1, "Your software" fr "Votre logiciel"

        ts_x -> anim 2000.0, OWS_SW = 2000, OWS_CLASH = -210
        ts_y -> anim    0.0, OWS_SW =    0, OWS_OS    =  220
        ts_w -> anim  400.0, OWS_SW =  400
        ts_h -> anim  200.0, OWS_SW =  200
        locally
            show anim (0.0, OWS_SW=0, OWS_CLASH=1, OWS_VIRT=0.5, OWS_CNTN=0)
            soft_box ts_x, ts_y, ts_w, ts_h, redhat_blue2, "Their software" fr "Leur logiciel"
            soft_box ts_x + 420.0, ts_y, ts_w, ts_h, redhat_blue2, "Some software" fr "Un logiciel"
            soft_box ts_x + 840.0, ts_y, ts_w, ts_h, redhat_blue2, "Other software" fr "Un autre logiciel"

        at_step OWS_OS
        os_x -> anim    0.0, OWS_SW =    0
        os_y -> anim    0.0, OWS_SW =    0, OWS_VIRT = -60, OWS_CNTN =   0, OWS_KVIRT=-60
        os_w -> anim 1650.0, OWS_SW = 1650
        os_h -> anim  200.0, OWS_SW =  200, OWS_VIRT = 100, OWS_CNTN = 200, OWS_KVIRT=100
        soft_box os_x, os_y, os_w, os_h, redhat_green1, "Operating system" fr "Système d'exploitation"

        locally
            show anim (0.0, OWS_SW=0, OWS_CHROOT=1, OWS_VIRT=0)
            soft_box -550, 100, 200, 200, redhat_red2,
                paragraph "chroot"
                image 0, 0, 50%, 50%, "Hard Disk.png"

        at_step OWS_VIRT
        vi_x -> anim -630.0, OWS_SW = -630,                 OWS_CNTN = -5000, OWS_KVIRT=-630
        vi_y -> anim   60.0, OWS_SW =   60, OWS_VIRT = 60
        vi_w -> anim  400.0, OWS_SW =  400
        vi_h -> anim  200.0, OWS_SW =  200, OWS_VIRT = 180
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            show exp(-0.1 * I)
            soft_box vi_x, vi_y, vi_w, vi_h, redhat_orange1, "Virtual Machine" fr "Machine virtuelle"

        vm_x -> anim 0.0, OWS_SW = 0, OWS_VIRT = -630
        vm_y -> anim 0.0, OWS_SW = 0, OWS_VIRT =  180
        vm_s -> anim 1.0, OWS_SW = 1, OWS_VIRT =   25%
        vm_c -> anim 1.0, OWS_SW = 1, OWS_CNTN = 0, OWS_KVIRT=1
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            translate vm_x, vm_y, 10
            scale vm_s
            soft_box os_x, os_y, os_w * vm_c, os_h * vm_c, redhat_green1, "Operating system" fr "Système d'exploitation"
            soft_box -630, -220, redhat_red2,
                image 0, 0, 60%, 60%, "Hard Disk.png"
            soft_box -210, -220, redhat_red2,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box 210,  -220, redhat_red2,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box 630, -220, redhat_red2,
                image 0, 0, 30%, 30%, "Network card.png"

        locally
            show anim (0.0, OWS_SW=0, OWS_QEMU=1, OWS_CNTN=0)
            qe_x -> anim -630.0, OWS_SW = -630, OWS_QEMU = -350, OWS_CNTN=-3000
            qe_y -> anim   60.0, OWS_SW =   60, OWS_QEMU =   50
            qe_w -> anim  400.0, OWS_SW =  400, OWS_QEMU =  300
            qe_h -> anim  180.0, OWS_SW =  180, OWS_QEMU =   80
            soft_box qe_x, qe_y, qe_w, qe_h, redhat_orange2, "qemu/libvirt"

        locally
            show anim (0.0, OWS_SW=0, OWS_KVM=1, OWS_CNTN=0)
            kv_x -> anim -630.0, OWS_SW = -630, OWS_KVM  = -630, OWS_CNTN=-3000
            kv_y -> anim   60.0, OWS_SW =   60, OWS_KVM  =  -30
            kv_w -> anim  400.0, OWS_SW =  400, OWS_KVM  =  300
            kv_h -> anim  180.0, OWS_SW =  180, OWS_KVM  =   80
            soft_box kv_x, kv_y, kv_w, kv_h, redhat_orange3, "kvm"

        at_step OWS_MINI
        qm_x -> anim -630.0, OWS_SW = -630, OWS_MINI= -630
        qm_y -> anim  -20.0, OWS_SW =  -20, OWS_MINI=  -20
        qm_w -> anim  250.0, OWS_SW =  250, OWS_MINI=  250
        qm_h -> anim   80.0, OWS_SW =   80, OWS_MINI=   80
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            soft_box qm_x, qm_y, qm_w, qm_h, redhat_orange2, "qemu-mini"

    locally
        show anim (0.0, OWS_SW=0, OWS_DOCKER=1, OWS_KVIRT=0, OWS_KATA=1)
        do_x -> anim    0.0, OWS_SW =    0, OWS_DOCKER =    0
        do_y -> anim  300.0, OWS_SW =  300, OWS_DOCKER =  300
        do_w -> anim 1100.0, OWS_SW = 1100, OWS_DOCKER = 1100
        do_h -> anim  200.0, OWS_SW =  280, OWS_DOCKER =  200
        soft_box do_x, do_y, do_w, do_h, redhat_ocean1,
            image 0, 20, 20%, 20%, "Logo-Red_Hat-Marketplace-Operated_By_IBM-B-Standard-RGB.png"

    at_step OWS_K8S
    ku_x -> anim -650.0, OWS_SW = -650, OWS_DOCKER = -750
    ku_y -> anim   30.0, OWS_SW =   30, OWS_DOCKER =   30
    ku_w -> anim  300.0, OWS_SW =  300, OWS_DOCKER =  300
    ku_h -> anim  700.0, OWS_SW =  780, OWS_DOCKER =  700
    soft_box ku_x, ku_y, ku_w, ku_h, redhat_yellow1,
        image 0, 20, 25%, 25%, "OpenShift.png"

    at_step OWS_CRI
    cr_x -> anim -550.0, OWS_SW = -550, OWS_CRI = -550
    cr_y -> anim  -20.0, OWS_SW =  -20, OWS_CRI =  -20, OWS_KVIRT=-120
    cr_w -> anim  200.0, OWS_SW =  200, OWS_CRI =  200
    cr_h -> anim   80.0, OWS_SW =   80, OWS_CRI =   80
    soft_box cr_x, cr_y, cr_w, cr_h, redhat_orange4, "CRI"


// ============================================================================
//
//   Confidential Containers
//
// ============================================================================

CNF_START       -> 0            // Blank
CNF_HOST        -> 1            // Show the host
CNF_RESOURCES   -> 2            // Resources
CNF_CONTAINERS  -> 3            // Containers
CNF_SANDBOX_OUT -> 4            // Sandboxing going out
CNF_SANDBOX_IN  -> 5            // Sandboxing going in
CNF_TENANTS     -> 6            // Multiple tenants
CNF_SAFE_TODAY  -> 7            // What is safe today
CNF_MEMORY_VM   -> 8            // Memory in the guest
CNF_MEMORY_HOST -> 9            // Memory encryption
CNF_INTEGRITY   -> 10           // State integrity
CNF_ATTESTATION -> 11           // Attestation
CNF_LAST        -> 11

confidential Step:integer ->
// ----------------------------------------------------------------------------
//   Overview diagram for "simplified overview" slide
// ----------------------------------------------------------------------------
    anim_step Step

    locally
        light 0
        light_position 50, 50, 120

        rotate_x 10
        rotate_y 10 * sin (0.3 * time)

        locally
            color "lightgray"
            scale fade_at(smooth_step, CNF_HOST)
            cube 0, 0, -150, 1500, 400, 300

            color "black"
            text_box 0,0, 1500, 400,
                style "story"
                align 90%
                vertical_align 95%
                $ "Virtual machine host" fr "Hébergeur de machines virtuelles"

        locally
            color safe_color CNF_ATTESTATION
            translate 0, -270, 0
            scale fade_at(smooth_step, CNF_RESOURCES)
            cube 0, 0, -150, 1500, 100, 300

            color "black"
            text_box 0,0, 1500, 100,
                style "story"
                color "lightgray"
                align 90%
                vertical_align 95%
                $ "Physical resources" fr "Ressources physiques"

            translate -300, 0, 25
            scale 50%
            extrude_depth 20
            extrude_radius 20
            soft_box -630, -20, safe_color CNF_INTEGRITY,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box -210, -20, safe_color CNF_MEMORY_HOST,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box  210,  -20, safe_color CNF_SAFE_TODAY,
                image 0, 0, 60%, 60%, "Hard Disk.png"
            soft_box  630, -20, safe_color CNF_SAFE_TODAY,
                image 0, 0, 50%, 50%, "Network card.png"


        locally
            CONTAINERS_COUNT -> anim 0.0, CNF_START=0, CNF_CONTAINERS=12
            for I in  0..integer(CONTAINERS_COUNT)-1 loop locally
                color_hsv I * 37, 80%, 80%
                cube -650 + 120 * I, 0, 100, 100, 100, 100

            at_step CNF_CONTAINERS
            color "black"
            text_box 0, 50, 1500, 100,
                style "story"
                align 50%
                vertical_align 5%
                $ "Containers" fr "Conteneurs"


        locally
            extrude_depth 50
            translate -410, -50, 200
            rotate_x -40
            locally
                color "red"
                rotate_z -90
                scale fade_between(smooth_step, CNF_SANDBOX_OUT, CNF_SANDBOX_IN)
                arrow 0, 0, 100, 100, 50, 60%
                translate_z 20
                rotate_z 45
                cube 0, 0, 0, 120, 10, 10
                rotate_z 90
                cube 0, 0, 0, 120, 10, 10
            locally
                translate 120, 0, 0
                color "green"
                rotate_z 90
                scale fade_between(smooth_step, CNF_SANDBOX_IN, CNF_SANDBOX_IN)
                arrow 0, 0, 100, 100, 50, 60%
                color "white"
                rotate_z 90
                extrude_depth 0
                image 0, 90 + 50 * sin(1.1*time), 10%, 10%, "BlueEyeIcon.png"

        locally
            show fade_between(smooth_step, CNF_TENANTS, CNF_TENANTS)
            translate -120, 0, 150
            for I in 0..3 loop
                image I * -120 - 60, 0, 1%, 1%, "Apple.png"
            image 320, 0, 10%, 10%, "Samsung.png"
            image 520, 0, 10%, 10%, "Samsung.png"

        memory_cone Color, X, Y, Z, Start, Stop, Body ->
            locally
                color Color
                translate X, Y, Z
                locally
                scale fade_between(smooth_step, Start, Stop)
                rotate_y 10 * sin (0.32 * time)
                rotate_x 150
                truncated_cone 0, 0, -200, 100, 100, 400, 0.0
                rotate_x 180
                translate_z 400
                frame_texture 512, 150,
                    color "white"
                    rectangle 999, 999
                    text_box 0, 0, 450, 200,
                        style "story"
                        align 50%
                        vertical_align 50%
                        Body
                texture_transform
                    scale 1, 3, 1
                    translate_y -0.3 * time mod 1
                    texture_wrap true, true
                ellipse 0, 0, 200, 200

        locally
            refresh 0
            memory_cone "lightblue", -290, 0, 120, CNF_MEMORY_VM, CNF_INTEGRITY,
                text "Hello World, value " fr "Hello, la valeur " & integer(time * 40 mod 1000)
                line_break
                text "is absolutely secret!" fr "est un secret!"
            memory_cone "lightgreen", -410, -250, 0, CNF_MEMORY_HOST, CNF_MEMORY_HOST,
                text "h3110 W0r1D; vA1u3 " fr "h3110; 1Ӓ √@Ĺ€ŮŘ " & integer(time * 40 mod 997)
                line_break
                text "15 @B501ùT31y 53cR3t¡" fr "35T ùN 53kŕ37¡"

        only_at CNF_INTEGRITY,
            for I in 0..1 loop locally
                translate -600 + 200 * I, -200 + 20 * sin((3.41 + I) * time), 100

                locally
                    color "white"
                    translate_z 125
                    extrude_depth 20
                    rectangle 0, 120, 180, 120
                    extrude_depth 0
                    text_box 0, 120, 150, 100,
                        font "Menlo", 14
                        color "darkblue"
                        align 0
                        if I = 0 then
                            $ "RAX = 0x0BADDA7A"
                            $ "RCX = 0x0BADC0DE"
                            $ "CR3 = 0xDEADBEEF"
                        else
                            $ "while (*ptr++=0);"
                            $ "if (!dead)"
                            $ "    goto retry;"

                rotate_z -90
                color "red"
                scale fade_between(smooth_step, CNF_INTEGRITY, CNF_INTEGRITY)
                arrow 0, 0, 100, 100, 50, 60%
                color "darkred"
                translate_z 20
                rotate_z 45
                cube 0, 0, 0, 120, 10, 10
                rotate_z 90
                cube 0, 0, 0, 120, 10, 10

        only_at CNF_ATTESTATION,
            color "green"
            font "Arial Unicode MS", 160
            align 50%
            vertical_align 50%
            extrude_depth 55
            translate_z 50
            text_box 700, -210, 100, 100, { text "✓" }
            text_box 700,  250, 100, 100, { text "✓" }
            translate_z 140
            text_box -360,  80, 100, 100, { text "✓" }
            text_box 480,   80, 100, 100, { text "✓" }
            text_box 360,   80, 100, 100, { text "✓" }

     at_step CNF_LAST
     if integer(smooth_step + 0.5) in CNF_MEMORY_VM..CNF_INTEGRITY then refresh 0

     safe_color Limit ->  if integer(smooth_step + 0.5) < Limit then redhat_red1 else "darkgreen"




// ============================================================================
//
//   Utlities
//
// ============================================================================

caption_at TimeSlot, Body ->
// ----------------------------------------------------------------------------
//   Show the caption at the given time
// ----------------------------------------------------------------------------
    only_at TimeSlot,
        soft_box -700, 500, 400, 200, "#444", Body


page_quote N ->
// ----------------------------------------------------------------------------
//   Show a selected quote in a page
// ----------------------------------------------------------------------------
    locally
        show_quotes step
        at_step 1
    on "pageentry",
        show_quote N
    on "pageexit",
        show_quotes_v := 0.0
        show_quotes := 0.0


show_quote N    ->
// ----------------------------------------------------------------------------
//   Show a selected quote from keyboard
// ----------------------------------------------------------------------------
    show_quotes := 1
    quote_step N
    refresh 0.1
    on "pageexit",
        show_quotes_v := 0.0
        show_quotes := 0.0

show_quotes     -> 0.0
show_quotes S   -> show_quotes := S
show_quotes_v   -> 0.0

interpolate 10%, show_quotes, show_quotes_v
if show_quotes_v > 0.0 then
    show show_quotes_v
    quotes
        quote "Kevin Mitnick", "I compromised the confidentiality of their proprietary software to advance my agenda of becoming the best at breaking through the lock."
        quote "Billy Graham", "Confidentiality is the essence of being trusted"
        quote "Gretchen Rubin", "I love cunning containers as much as anyone, but I've found that if I get rid of everything I don't need, I often don't need a container at all."
        quote "Andrew Tannenbaum", "The good thing about standards is", " that there are so many to choose from."
        quote "Edward Teller", "A state-of-the-art calculation requires 100 hours of CPU time on the state-of-the-art computer, independent of the decade."
        quote "Will Durant", "History is always repeating itself,", "but each time the price goes up"
        quote "Henry Louis Mencken", "For every problem, there is a solution that is simple, clean and wrong"
        quote "Julian Assange", "A nation can't solve", "what the press won't let it perceive"
disabled
        quote "Second law of thermodynamics", "Entropy, i.e. disorder,  always increases with time"
        quote  "Perl motto (Larry Wall)", "There is more than one way to do it"
        quote "Richard P. Gabriel", "Get half of the right thing available so that it spreads like a virus. Once people are hooked on it, improve it to 90% of the right thing."
        quote "Fabiano Fidêncio", "Break it properly so that you can fix it properly"

key "q" -> show_quotes (if show_quotes <> 0.0 then 0.0 else 1.0); refresh 0
key "]" -> quote_step := quote_step + 1; refresh 0
key "[" -> quote_step := quote_step - 1; refresh 0
