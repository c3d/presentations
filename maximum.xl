generic type ordered where
    A, B : ordered
    Test : boolean := A < B

function Max (X : ordered) return ordered is
    return X

function Max (X : ordered; ...) return ordered is
    result := Max(...)
    if result < X then
        result := X

Test_integer : integer := Max(1, 2, 4, 6)
Test_real : real := Max (1.5, -2.6, 2.7, 8.41, 2.21)
Test_integer1 : integer := Max(1)
Test_real1 : real := Max (2.21)
Test_integer2 : integer := Max(1, 817)
Test_real2 : real := Max (2.21, 4.441e-3)

WriteLn "Integer = ", Test_integer
WriteLn "Real = ", Test_real
WriteLn "Integer1 = ", Test_integer1
WriteLn "Real1 = ", Test_real1
WriteLn "Integer2 = ", Test_integer2
WriteLn "Real2 = ", Test_real2
