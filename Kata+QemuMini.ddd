presentation_title "Kata Containers and QEMU Mini on Fedora"
presentation_logo "KataContainersLogo.png"
presentation_url "https://github.com/c3d/presentations"
presentation_tao "https://github.com/c3d/presentations/blob/sophiaconf-2020/Kata%2BQemuMini.ddd"
presentation_author "Christophe de Dinechin (dinechin@redhat.com, IRC c3d)"

// ----------------------------------------------------------------------------
main_title_slide "Main title",
// ----------------------------------------------------------------------------
    title "Kata Containers and qemu-mini in Fedora"
    subtitle
        $ "Kata Containers runs containers in their own virtual machine"
        $ "for improved isolation and additional features."
        $
        $ presentation_author

    title_slide_logo


// ----------------------------------------------------------------------------
section_slide "The short story",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Why package Kata Containers for Fedora?"
    title_slide_logo


// ---------------------------------------------------------------------------
base_slide "Put containers in virtual machines",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Kata Containers improve containers isolation, with additional features"
    slide_picture "Square Peg Round Hole.png", 0%, 250
    stepping
    story
        * "Value proposition: speed and security"
        * "Drop-in replacement for container runtimes"
        * "Works with docker, podman, kubernetes, etc"
        * "Do you really get everything at once?"
    right_picture
        images "Kata Web Site.png", "Docker and Kata Containers.png", "Kubernetes to VMs.png", "Kata Value Proposition.png"


// ---------------------------------------------------------------------------
base_slide "How do you run Kata Containers?",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Well, as usual with containers, it depends..."
    slide_picture "Thick Manual.png", 0%, 300
    stepping
    story
        * { text "Podman: Add the "; code "--runtime"; text " option" }
        ** "For now, also need to disable SELinux"
        * "Docker: it's a little more complicated..."
        ** { text "Manually edit "; code "docker.service" }
        ** "Then it's much like for podman"
        * "CRI-O (Kubernetes, OpenShift)"
        ** { text "Add entries in "; code "/etc/crio/crio.conf" }
    code_position 400, 0, 900, 300
    code_box_at_step 1, "Podman",
        font_size 30
        highlight "--runtime", "\n"
        colorize load_text "podman1.sh"
    code_box_at_step 2, "Podman SELinux",
        font_size 30
        highlight "--security-opt", "\n"
        colorize load_text "podman2.sh"
    code_position 400, 0, 1100, 500
    code_box_at_step 4, "Docker services file",
        font_size 30
        highlight "--add-runtime", "\n"
        colorize load_text "docker.service"
    code_position 400, 0, 900, 300
    code_box_at_step 5, "Docker",
        font_size 30
        highlight "--runtime", "alpine"
        colorize load_text "docker.sh"
    code_box_at_step 7, "CRI-O 1.12 and later",
        font_size 30
        colorize load_text "crio.conf"
        highlight


// ---------------------------------------------------------------------------
base_slide "Installing Kata Containers",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Now with actual Fedora packages..."
    slide_picture "Complex Installation.jpg", 5%, 300
    stepping
    story
        * "Five packages (for now)"
        ** { code "kata-runtime"; text ": the OCI runtime" }
        ** { code "kata-osbuilder"; text ": building images" }
        ** { code "kata-shim"; text ": handle I/Os and signals" }
        ** { code "kata-proxy"; text ": route data to agent" }
        ** { code "kata-ksm-throttler"; text ": same-page merging" }
        $
        * "Wait? There is an agent?"
        ** { text "Yes, it is integrated in "; code "kata-osbuilder" }
        * { text "Wait? There is no "; code "kata-netmon"; text "?" }
        ** "I wish that was the worst of our problems"

    code_position 400, 0, 900, 500
    code_box_at_step 1, "Podman",
        font_size 42
        $ "dnf install          \"
        $ "  kata-runtime       \"
        $ "  kata-osbuilder     \"
        $ "  kata-shim          \"
        $ "  kata-proxy         \"
        $ "  kata-ksm-throttler"
    right_picture
        only_at 2..8, { image 0, 0, 25%, 25%, "Kata Explained.png" }
        line_color "red"
        color "red", 20%
        line_width 2
        only_at 2, { rectangle -100, 12, 150, 80 }
        only_at 3, { rectangle  280, -50, 250, 150 }
        only_at 4, { rectangle -270, 12, 150, 80 }
        only_at 5, { rectangle -185, -140, 210, 80 }


// ---------------------------------------------------------------------------
base_slide "Kata configuration",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "So many choices to get wrong..."
    slide_picture "Just Press This Button.jpg", 5%, 300
    stepping
    story
        * { text "Found in "; code "configuration.toml" }
        ** { text "Variants like "; code "configuration-fc.toml" }
        * "Primary configuration categories"
        ** "Hypervisor (includes machine configuration)"
        ** "Runtime"
        ** "Agent"
        * "Many other knobs"
        ** "Factory (VM templating)"
        ** "Shim, proxy and agent"
        ** "Network monitor"
    code_position 400, 0, 1000, 700
    code_box_at_step 1, "configuration.toml",
        colorize load_text "config-orig.toml"
    code_box_at_step 2, "configuration-fc.toml",
        colorize load_text "config-fc.toml"
    code_box_at_step 4, "Hypervisor",
        colorize load_text "config-hyper.toml"
    code_box_at_step 5, "Runtime",
        colorize load_text "config-runtime.toml"
    code_box_at_step 6, "Agent",
        colorize load_text "config-agent.toml"
    code_box_at_step 8, "Factory",
        colorize load_text "config-factory.toml"
    code_box_at_step 9, "Shim",
        colorize load_text "config-shim.toml"
    code_box_at_step 10, "Network monitor",
        colorize load_text "config-netmon.toml"

// ---------------------------------------------------------------------------
base_slide "Hypervisor configuration",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Knobs, knobs, knobs everywhere!!!"
    slide_picture "Hypervisor Config.jpg", 5%, 300
    stepping
    story
        * "Filesystem locations"
        ** { code "path"; text ": the user-space command" }
        ** { code "kernel"; text ": the kernel image" }
        ** { code "initrd"; text ": the initial disk image" }
        ** { code "image"; text ": same in "; code "rootfs"; text " format" }
        * { text "Only one of "; code "initrd"; text " or "; code "image"}
        ** { text "Save space with "; code "initrd"; text " vs. "; code "image"}
        $
        * "Similar configuration for other hypervisors"
        ** { text "Choices are "; code "firecracker"; text ", "; code "nemu"; text " and "; code "acrn" }
        ** { text "Choice of "; code "qemu"; text ", "; code "qemu-lite"; text " or "; code "qemu-mini" }

    code_position 400, 0, 1000, 800
    code_box_at_step 1..6, "Hypervisor configuration",
        font_size 24
        highlight "none", "none"
        colorize load_text "config-qemu.toml"
    only_at 2..5,
        picture
            line_color "red"
            color "red", 20%
            line_width 2
            rectangle 400, 343 - 28 * smooth_step, 1000, 30


// ----------------------------------------------------------------------------
section_slide "You can leave now",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "(The rest of this talk is rambling and grumbling)"
    title_slide_logo



// ----------------------------------------------------------------------------
section_slide "History of the project",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "How does Kata Containers fit with ""all the rest"""
    title_slide_logo


// ---------------------------------------------------------------------------
base_slide "Preliminary Words of Wisdom",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "We are standing on the shoulder of intellectual giants"
    stepping
    page_quote 0
    on "key:Left",  { key "-" }
    on "key:Right", { key "+" }


// ---------------------------------------------------------------------------
base_slide "A pre-history of software boxing",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "How control-freak programmers got us all into this mess"
    slide_picture "ControlFreak.png"
    stepping
    story
        ** "Run your application directly on the hardware"
        ** "MMU and Virtual memory: Control memory accesses"
        ** "Virtual machines: Control the whole machine"
        ** "chroot: Control file accesses"
        ** "VMware: Control non-virtualizable x86"
        ** "FreeBSD Jails: Control users, files and networking"
        ** "Vserver: Control ports"
        ** "Solaris Zones: Control views on filesystem"
        ** "cgroups: Control processes"
        ** "Namespaces: Control root access"
        ** "LXC: User-space control tools"
        ** "Docker: Control at your fingertips"

    right_picture
        images "MacOS Bomb.jpg", "Virtual Memory.png", "VM370.jpg", "chroot.png", "VMware.jpg", "FreeBSD Jails.png", "Linux VServer.gif", "Solaris Zones.jpg", "cgroups.png", "Linux Namespaces.png", "IBM LXC.png", "Docker.png"


// ---------------------------------------------------------------------------
base_slide "The cost of control",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "A constant trade-off between conflicting demands"
    slide_picture "Cost of Control.png", 5%, 400
    stepping
    story
        * "Bare hardware: full access, but fragile and not portable"
        * "Virtual memory: memory protection, but disk trashing and performance cost"
        * "Chroot and Jails: Inexpensive and easy to do, but limited benefits"
        * "Full virtualization: High protection, run DOS on Linux, but so slooow"
        * "Containers: Much more lightweight, orchestration for scale"
        * "Kata Containers: Protect containers with VMs, but of course slower"
        * "qemu-mini: We finally found an excuse to git rid of IDE!"

    right_picture
        at_step 1
        translate 100, 300, 0
        rotate_z 30 * cos(smooth_step * pi)
        color "lightgray"
        rounded_rectangle 0, -190, 30, 415, 20
        color "darkgrey"
        circle 0, -445, 50
        color_hsv 45 - 45 * cos(smooth_step * pi), 90%, 60%
        circle 0, -445, 45
        color "darkgrey"
        circle 0, 0, 10


// ---------------------------------------------------------------------------
base_slide "A simplified overview",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Let's not make things worse by guessing"
    slide_picture_at OWS_SW..OWS_OS,      "Emoji=Happy.png", 5%, 300
    slide_picture_at OWS_CHROOT..OWS_KVM, "Emoji=Thinking.png", 5%, 300
    slide_picture_at OWS_CNTN..OWS_CRI,   "Emoji=Questioning.png", 5%, 350
    slide_picture_at OWS_KVIRT..OWS_MINI, "Emoji=Crazy.png", 5%, 350
    stepping
    picture
        caption_at OWS_SW, "Software is what matters"
        caption_at OWS_HW, "Direct hardware access (Macintosh, Unikernel)"
        caption_at OWS_CLASH, "Sharing resources is both hard and risky"
        caption_at OWS_OS, "Operating system deal with this problem"
        caption_at OWS_CHROOT, "chroot gives you a filesystem sandbox"
        caption_at OWS_VIRT, "Virtualization gives you a full machine sandbox"
        caption_at OWS_QEMU, "QEMU: User-space interface for virtualization"
        caption_at OWS_KVM, "KVM: Kernel component supporting virtualization"
        caption_at OWS_CNTN, "Containers are complete OS-built sandboxes"
        caption_at OWS_MANY, "Containers scale well"
        caption_at OWS_DOCKER, "Docker provides rich software components composition and setup"
        caption_at OWS_K8S, "Kubernetes features large-scale orchestration"
        caption_at OWS_CRI, "A modular interface connects orchestration to system and workloads"
        caption_at OWS_KVIRT, "KubeVirt orchestrates virtual machines"
        caption_at OWS_KATA, "Kata Containers run containers in isolated virtual machines"
        caption_at OWS_MINI, "QEMU-mini is QEMU optimized for Kata"
        overview integer(smooth_step + 0.5)


// ---------------------------------------------------------------------------
base_slide "Are you confused yet?",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "The very predictable result of growing things step by step"
    slide_picture "Emoji=Crazy.png", 5%, 350
    stepping
    page_quote 4



// ============================================================================
//
section_slide "General architecture",
//
// ============================================================================
    title page_label
    subtitle "How do the pieces fit together?"
    title_slide_logo


// ---------------------------------------------------------------------------
base_slide "How Docker talks to containers",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "The guy who talked to the guy who talked to the guy..."
    slide_picture "Docker.png"
    stepping
    picture
        image 0, 30, 150%, 150%, "Docker and Kata Containers.png"


// ---------------------------------------------------------------------------
base_slide "Digression: crun vs. runc",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Because we really need another language war"
    slide_picture "C vs Go.png"
    stepping
    picture
        only_at 1, { image 0, 0, 1, 1, "runc.png" }
        only_at 2, { image 0, 0, 1, 1, "crun.png" }
        only_at 3, { image 0, 60, 1, 1, "crun-full.png" }
        at_step 3


// ---------------------------------------------------------------------------
base_slide "Digression: why stop digressing?",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Hypervisor-based runtime for OCI"
    slide_picture "runV Logo.png"
    stepping
    picture
        image 0, 60, 1, 1, "runV.png"


// ---------------------------------------------------------------------------
base_slide "How Kubernetes talks to containers",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "You never run out of levels of indirection, until there is one too many"
    slide_picture "Kubernetes.png"
    stepping
    picture
        image 0, 60, 3, 3, "Kubernetes to Containers.png"
        text_box 500, -240, 800, 250,
            style "story"
            $ "CRI: Container Runtime Interface (k8s 1.5)"
            $ "OCI: Open Container Initiative"
            $ "CRI-O: OCI-compliant CRI"
            $ "frakti: Hypervisor-based runtime"


// ---------------------------------------------------------------------------
base_slide "Luckily, these are standards",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Which reminds me of one of our great quotes..."
    stepping
    page_quote 2
    on "key:Left",  { key "-" }
    on "key:Right", { key "+" }


// ---------------------------------------------------------------------------
base_slide "Swapping the runtime",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "kata-runtime as a drop-in replacement for crun/runc"
    slide_picture "KataContainersLogo.png", 0%, 300
    stepping
    picture
        image 0, 30, 3, 3, "Kubernetes to VMs.png"


// ---------------------------------------------------------------------------
base_slide "There is more than the runtime",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Let's not even pretend that this thing is simple"
    slide_picture "KataContainersLogo.png", 0%, 300
    stepping
    picture
        image 0, 30, 40%, 40%, "Kata Explained.png"


// ---------------------------------------------------------------------------
base_slide "Kubernetes integration",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "The great black box simplification"
    slide_picture "Kubernetes.png", 0%, 300
    stepping
    picture
        only_at 0,
            image 0, 30, 60%, 60%, "Kubernetes Integration v1.png"
        only_at 1,
            image 0, 30, 60%, 60%, "Kubernetes Integration v2.png"
        at_step 2


// ---------------------------------------------------------------------------
base_slide "Stuff we must leave out",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "I only have about 45 minutes to talk"
    slide_picture "Emoji=Puzzled.png", 0%, 300
    stepping
    story
        * "containerd, dockerd and all the nasty little daemons"
        * "shims and proxies and agents and other helpers"
        * "kubelet and how Kubernetes actually talks to pods"
        * "rkt, kurma, jetpack and exotic runtimes"
        * "podman, moby and other variations on docker"
        * "Container image formats, repositories and build tools"
        $
        * "All these things are their own projects and ecosystems"


// ---------------------------------------------------------------------------
base_slide "By now you should be completely lost",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "The Rube-Goldberg school of computer programming"
    slide_picture "Emoji=Crazy.png"
    stepping
    page_quote 1



// ============================================================================
//
section_slide "Packaging for Fedora",
//
// ============================================================================
    title page_label
    subtitle "It was supposed to be so simple"
    title_slide_logo


// ---------------------------------------------------------------------------
base_slide "Bits and pieces to start with",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Some work had already been done"
    slide_picture "Bits and Pieces.png", 0, 300
    stepping
    story
        * "Kata Containers was largely working"
        ** "SuSE packages available and somewhat working..."
        ** "But with really funny names (qemu-lite = ""OpenBIOS development utilities"" ???)"
        ** "... and interesting conflicts (guess what happens when you install multiple qemu variants?)"
        ** "Also not really following Fedora conventions"
        * "Some test packages, not submitted yet, not working, outdated"
        ** "Original packager had stopped working on it"
        $
        * "I am a total newbie with respect to Fedora packaging"
        ** "If it's broken, please tell me"
        ** { text "It "; red "is"; text " broken. Please tell me." }


// ---------------------------------------------------------------------------
base_slide "Kata package structure",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Why build one package when you can build five?"
    slide_picture "Harbin.jpg", 5%, 300
    stepping
    story
        * { text "Main package: "; code "kata-runtime" }
        * { text "Building OS image: "; code "kata-osbuilder" }
        * { text "Shim: "; code "kata-shim" }
        * { text "Proxy: "; code "kata-proxy" }
        * { text "Same page merging: "; code "kata-ksm-throttler" }
        $
        * "Don't worry, we'll talk about qemu next"
    right_picture
        only_at 1..5, { image 0, 0, 25%, 25%, "Kata Explained.png" }
        line_color "red"
        color "red", 20%
        line_width 2
        only_at 1, { rectangle -100, 12, 150, 80 }
        only_at 2, { rectangle  280, -50, 250, 150 }
        only_at 3, { rectangle -270, 12, 150, 80 }
        only_at 4, { rectangle -185, -140, 210, 80 }


// ---------------------------------------------------------------------------
base_slide "A tale of two package managers",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Go and rpm don't mix too well"
    slide_picture "Coke and Mentos.jpg", 5%, 300
    stepping
    story
        * "Building a Go package manually"
        ** "Requires Internet access for dependencies"
        * { text "But no, you must use "; code "go-rpm-macros" }
        ** "Go has its own ""package manager"""
        ** "And Fedora won't have that"
        * "It looks simple"
        ** "... except it does not work in real-life"
        ** { code "go2rpm"; text " gives a good starting point" }
        ** "... but of course only worked too late for me"
        * "Collecting and sharing go packages"
    code_position 400, 0, 1000, 700
    code_box_at_step 1, "Naive approach",
        font_size 32
        highlight "not_check_version"
        colorize load_text "build-manually.spec"
    code_box_at_step 2, "not_check_version?",
        font_size 20
        highlight "not_check_version"
        colorize load_text "not_check_version.mk"
    only_at 3, { right_picture { image 0, 0, 35%, 35%, "go-rpm-macros-0.png" } }
    only_at 6, { right_picture { image 0, 0, 35%, 35%, "go-rpm-macros-1.png" } }
    code_box_at_step 7, "Can't use it here?",
        font_size 25
        highlight "not_check_version"
        colorize load_text "build_binaries.mk"
    code_box_at_step 10, "Provides... a lot",
        font_size 18
        highlight "Provides"
        colorize load_text "provides.spec"


// ---------------------------------------------------------------------------
base_slide "We all thought it would be easy...",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "But it turned out really messy"
    slide_picture "Messy Kid.jpg", 5%, 300
    stepping
    story
        * "66 commits for that???"
    code_position 200, 0, 1200, 700
    code_box_at_step 1, "Commits",
        text load_text "commits.log"


// ============================================================================
//
section_slide "You hoped we were done?",
//
// ============================================================================
    title page_label
    subtitle "There is still quite a bit of work to do"
    title_slide_logo


// ---------------------------------------------------------------------------
base_slide "Many major issues to address",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Not everything is under control yet"
    slide_picture "This Will Not End Well.png", 5%, 300
    stepping
    story
        * "Moving parts left and right"
        ** { text "Issues with "; code "cgroupsv2" }
        ** { text "Support for "; code "virtio-fs"; text " (faster than "; code "9p"; text ")" }
        * "Running as root"
        ** "Need some kind of jailer for qemu"
        ** "Preferably leveraging libvirt"
        ** "SELinux is borked"
        $
        * "Enhancements"
        ** "Memory-mapped kernel, PVH?"
        ** "VM-optimized kernel"

    only_at 1,
        right_picture
            translate -150, 0, 0
            scale 50%
            shader_show "shaders/space-jewels.fs",
                shader_resolution
                shader_atime
                shader_depth 100%
                shader_channel 0, "tex09.jpg"
                shader_scale 35%
    code_position 400, 0, 1000, 700
    code_box_at_step 2, "cgroupsv2 workaround",
        font_size 32
        colorize load_text "cgroupsv2.sh"
    only_at 3,
        right_picture
            image 0,  250, 40%, 40%, "virtiofs-perf-sync.png"
            image 0,   50, 40%, 40%, "virtiofs-perf-async.png"
            image 0, -200, 20%, 20%, "virtiofs-perf-aug2019.png"
    only_at 4,
        right_picture
            image 0, 0, 80%, 80%, "Doctor Evil.jpg"
    right_picture
        scale_x 130%
        // https://www.youtube.com/watch\?v\=u8h8d2XLWKY
        movie_only_at 5, "movies/Terminator2.mp4##start-time=59##stop-time=70##input-repeat=-1"
    right_picture
        image_only_at 6,  { image "Goldilocks.jpg" }
        image_only_at 7,  { image 0, 0, 120%, 120%,  "No SELinux.jpg" }
        image_only_at 8,  { image "Enhancements.jpg" }
        image_only_at 9,  { image 0, 30, 40%, 40%, "PVH Boot.png" }
        image_only_at 10, { image 0, 30, 180%, 180%, "First IDE Drive.png" }


// ---------------------------------------------------------------------------
base_slide "virtio-fs: fast host-guest I/O",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Networking is bad, fake networking is evil"
    slide_picture "Fake Networking.jpg", 5%, 300
    stepping
    picture
        only_at 1,
            image 0, 0, 140%, 140%, "virtiofs-perf-sync.png"
        only_at 2,
            image 0, 0, 140%, 140%, "virtiofs-perf-async.png"
        at_step 2



// ============================================================================
//
section_slide "What about qemu-mini?",
//
// ============================================================================
    title page_label
    subtitle "qemu configured for Kata Containers"
    stepping


// ---------------------------------------------------------------------------
base_slide "qemu-mini: Tuned for Kata",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Try to make it a configuration change only (no patches)"
    slide_picture "Gamer PC.jpg", 5%, 300
    stepping
    story
        * "Disable everything"
        * "Re-enable what we miss"
        * "This builds yet another qemu binary"
        * "In the end, only 4 (transient) patches"
    code_position 400, 0, 1000, 700
    code_box_at_step 1, "Configure everything out",
        font_size 22
        colorize load_text "disable-everything.spec"
    code_box_at_step 2, "Configure what we need back in",
        font_size 22
        highlight "user_mini_fdt"
        colorize load_text "enable-useful.spec"
    code_box_at_step 3, "qemu-mini binary",
        font_size 22
        highlight "mini"
        colorize load_text "qemu-mini.spec"
    only_at 3,
        right_picture
            image 300, 100, 30%, 30%, "Doctor Evil.jpg"
    code_box_at_step 4, "Patches",
        font_size 22
        highlight "Patch"
        colorize load_text "qemu-patches.spec"


// ---------------------------------------------------------------------------
base_slide "This is really the third attempt",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Before that, I needed config script changes..."
    stepping
    page_quote 5
    on "key:Left",  { key "-" }
    on "key:Right", { key "+" }


// ---------------------------------------------------------------------------
base_slide "qemu-mini: What do we gain?",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Much smaller binary, but not much faster. Does that matter?"
    slide_picture "Pile of Cash.png", 5%, 300
    stepping
    picture
        only_at 1,
            image 0, 30, 85%, 85%, "qemu-mini size.png"
        only_at 2,
            image 0, 30, 85%, 85%, "qemu-mini performance.png"
        at_step 2


// ---------------------------------------------------------------------------
base_slide "qemu-mini: Will it ship?",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "Probably not - alternatives are being considered"
    slide_picture "Will It Ship.jpg", 5%, 400
    stepping
    left_column
        translate_y -150 * sin(smooth_step * pi / 8)
        $ { bold { green "Pros" } }
        * "Reduces the footprint"
        * "May reduce startup time"
        * "Built from a single source (at last)"
        * { text "Shorter to type than "; code "qemu -mini" }
    right_column
        translate_y 150 * sin(smooth_step * pi / 8)
        $ { bold { red "Cons" } }
        * "Multiple binaries (too many already)"
        * "Additional testing"
        * "Overly specialized use-case (or... is it?)"
        * "That binary does not exist everywhere"
        * { text "We may do almost as well with "; code "dlopen()" }


// ---------------------------------------------------------------------------
base_slide "In conclusion...",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "We have only begun making this complicated"
    stepping
    page_quote 3
    on "key:Left",  { key "-" }
    on "key:Right", { key "+" }


// ============================================================================
//
section_slide "Thank you",
//
// ============================================================================
    title page_label
    subtitle presentation_url
    stepping

    contents 0,
        text_box -200, -400, 600, 200,
            style "story"
            font_size 30
            anchor
                image -80, -40, 10%, 10%, "Tao3D.png"
            paragraph "This Tao3D presentation is available at"
            paragraph presentation_tao
    title_slide_logo



// ============================================================================
//
//   Overview diagram
//
// ============================================================================
// 0: Your software on hardware
// 1: Your software conflicting with other software
// 2: Operating system: takes control
// 3: Chroot: Carve out your little disk space
// 4: Virtualization: Carve out your whole machine
// 5: qemu
// 6: kvm
// 7: Containers: Carve out the whole thing
// 8: Multiplication of containers
// 9: Docker: declarative software components (dockerd)
// 10: Kubernetes: declarative orchestration (kubelet)
// 11: CRI / CRI-O: Runtime abstraction
// 12: KubeVirt: manage VMs with k8s
// 13: Kata: put containers in their own VM
// 14: qemu-mini

OWS_SW          -> 0
OWS_HW          -> 1
OWS_CLASH       -> 2
OWS_OS          -> 3
OWS_CHROOT      -> 4
OWS_VIRT        -> 5
OWS_QEMU        -> 6
OWS_KVM         -> 7
OWS_CNTN        -> 8
OWS_MANY        -> 9
OWS_DOCKER      -> 10
OWS_K8S         -> 11
OWS_CRI         -> 12
OWS_KVIRT       -> 13
OWS_KATA        -> 14
OWS_MINI        -> 15

overview Step:integer ->
// ----------------------------------------------------------------------------
//   Overview diagram for "simplified overview" slide
// ----------------------------------------------------------------------------
    anim_step Step

    overview_adjust S:real ->
        translate 0, -100 * S, -50 * S
        scale 100% - 30% * S

    locally
        overview_adjust anim(0.0, OWS_SW = 0, OWS_DOCKER = 1)

        locally
            at_step OWS_HW
            soft_box -630, -220, redhat_red2,
                image 0, 0, 30%, 30%, "Hard Disk.png"
            soft_box -210, -220, redhat_red2,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box 210,  -220, redhat_red2,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box 630, -220, redhat_red2,
                image 0, 0, 30%, 30%, "Network.png"

        COUNT -> anim 1.0, OWS_SW = 1, OWS_MANY = 12, OWS_KVIRT = 4, OWS_KATA=8

        ys_x -> anim    0.0, OWS_SW =    0, OWS_CLASH = -630, OWS_VIRT = -630, OWS_CNTN = -630, OWS_KVIRT=-630
        ys_y -> anim    0.0, OWS_SW =    0, OWS_OS    =  220, OWS_VIRT =  250, OWS_CNTN =  220, OWS_KVIRT= 250
        ys_w -> anim 1650.0, OWS_SW = 1650, OWS_CLASH =  400, OWS_VIRT =  400, OWS_CNTN =  400, OWS_KVIRT= 400
        ys_h -> anim  200.0, OWS_SW =  200,                   OWS_VIRT =  150, OWS_CNTN =  200, OWS_KVIRT= 150
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            show exp(-0.1 * I)
            soft_box ys_x, ys_y, ys_w, ys_h, redhat_blue1, "Your software"

        ts_x -> anim 2000.0, OWS_SW = 2000, OWS_CLASH = -210
        ts_y -> anim    0.0, OWS_SW =    0, OWS_OS    =  220
        ts_w -> anim  400.0, OWS_SW =  400
        ts_h -> anim  200.0, OWS_SW =  200
        locally
            show anim (0.0, OWS_SW=0, OWS_CLASH=1, OWS_VIRT=0.5, OWS_CNTN=0)
            soft_box ts_x, ts_y, ts_w, ts_h, redhat_blue2, "Their software"
            soft_box ts_x + 420.0, ts_y, ts_w, ts_h, redhat_blue2, "Some software"
            soft_box ts_x + 840.0, ts_y, ts_w, ts_h, redhat_blue2, "Other software"

        at_step OWS_OS
        os_x -> anim    0.0, OWS_SW =    0
        os_y -> anim    0.0, OWS_SW =    0, OWS_VIRT = -60, OWS_CNTN =   0, OWS_KVIRT=-60
        os_w -> anim 1650.0, OWS_SW = 1650
        os_h -> anim  200.0, OWS_SW =  200, OWS_VIRT = 100, OWS_CNTN = 200, OWS_KVIRT=100
        soft_box os_x, os_y, os_w, os_h, redhat_green1, "Operating system"

        locally
            show anim (0.0, OWS_SW=0, OWS_CHROOT=1, OWS_VIRT=0)
            soft_box -550, 100, 200, 200, redhat_red2,
                paragraph "chroot"
                image 0, 0, 20%, 20%, "Hard Disk.png"

        at_step OWS_VIRT
        vi_x -> anim -630.0, OWS_SW = -630,                 OWS_CNTN = -3000, OWS_KVIRT=-630
        vi_y -> anim   60.0, OWS_SW =   60, OWS_VIRT = 60
        vi_w -> anim  400.0, OWS_SW =  400
        vi_h -> anim  200.0, OWS_SW =  200, OWS_VIRT = 180
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            show exp(-0.1 * I)
            soft_box vi_x, vi_y, vi_w, vi_h, redhat_orange1, "Virtual Machine"

        vm_x -> anim 0.0, OWS_SW = 0, OWS_VIRT = -630
        vm_y -> anim 0.0, OWS_SW = 0, OWS_VIRT =  180
        vm_s -> anim 1.0, OWS_SW = 1, OWS_VIRT =   25%
        vm_c -> anim 1.0, OWS_SW = 1, OWS_CNTN = 0, OWS_KVIRT=1
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            translate vm_x, vm_y, 10
            scale vm_s
            soft_box os_x, os_y, os_w * vm_c, os_h * vm_c, redhat_green1, "Operating system"
            soft_box -630, -220, redhat_red2,
                image 0, 0, 30%, 30%, "Hard Disk.png"
            soft_box -210, -220, redhat_red2,
                image 0, 0, 30%, 30%, "CPU.png"
            soft_box 210,  -220, redhat_red2,
                image 0, 0, 30%, 30%, "RAM.png"
            soft_box 630, -220, redhat_red2,
                image 0, 0, 30%, 30%, "Network.png"

        locally
            show anim (0.0, OWS_SW=0, OWS_QEMU=1, OWS_CNTN=0)
            qe_x -> anim -630.0, OWS_SW = -630, OWS_QEMU = -350, OWS_CNTN=-3000
            qe_y -> anim   60.0, OWS_SW =   60, OWS_QEMU =   50
            qe_w -> anim  400.0, OWS_SW =  400, OWS_QEMU =  300
            qe_h -> anim  180.0, OWS_SW =  180, OWS_QEMU =   80
            soft_box qe_x, qe_y, qe_w, qe_h, redhat_orange2, "qemu/libvirt"

        locally
            show anim (0.0, OWS_SW=0, OWS_KVM=1, OWS_CNTN=0)
            kv_x -> anim -630.0, OWS_SW = -630, OWS_KVM  = -630, OWS_CNTN=-3000
            kv_y -> anim   60.0, OWS_SW =   60, OWS_KVM  =  -30
            kv_w -> anim  400.0, OWS_SW =  400, OWS_KVM  =  300
            kv_h -> anim  180.0, OWS_SW =  180, OWS_KVM  =   80
            soft_box kv_x, kv_y, kv_w, kv_h, redhat_orange3, "kvm"

        at_step OWS_MINI
        qm_x -> anim -630.0, OWS_SW = -630, OWS_MINI= -630
        qm_y -> anim  -20.0, OWS_SW =  -20, OWS_MINI=  -20
        qm_w -> anim  250.0, OWS_SW =  250, OWS_MINI=  250
        qm_h -> anim   80.0, OWS_SW =   80, OWS_MINI=   80
        for I in 0..integer(COUNT)-1 loop locally
            translate I * 420 mod 1680 + I / 4 * 30, I / 4 * 50, -I/4 * 200
            soft_box qm_x, qm_y, qm_w, qm_h, redhat_orange2, "qemu-mini"

    locally
        show anim (0.0, OWS_SW=0, OWS_DOCKER=1, OWS_KVIRT=0, OWS_KATA=1)
        do_x -> anim    0.0, OWS_SW =    0, OWS_DOCKER =    0
        do_y -> anim  300.0, OWS_SW =  300, OWS_DOCKER =  300
        do_w -> anim 1100.0, OWS_SW = 1100, OWS_DOCKER = 1100
        do_h -> anim  200.0, OWS_SW =  280, OWS_DOCKER =  200
        soft_box do_x, do_y, do_w, do_h, redhat_ocean1,
            image 0, 20, 30%, 30%, "Docker.png"

    at_step OWS_K8S
    ku_x -> anim -650.0, OWS_SW = -650, OWS_DOCKER = -750
    ku_y -> anim   30.0, OWS_SW =   30, OWS_DOCKER =   30
    ku_w -> anim  300.0, OWS_SW =  300, OWS_DOCKER =  300
    ku_h -> anim  700.0, OWS_SW =  780, OWS_DOCKER =  700
    soft_box ku_x, ku_y, ku_w, ku_h, redhat_yellow1,
        image 0, 20, 30%, 30%, "Kubernetes.png"

    at_step OWS_CRI
    cr_x -> anim -550.0, OWS_SW = -550, OWS_CRI = -550
    cr_y -> anim  -20.0, OWS_SW =  -20, OWS_CRI =  -20, OWS_KVIRT=-120
    cr_w -> anim  200.0, OWS_SW =  200, OWS_CRI =  200
    cr_h -> anim   80.0, OWS_SW =   80, OWS_CRI =   80
    soft_box cr_x, cr_y, cr_w, cr_h, redhat_orange4, "CRI"


caption_at TimeSlot, Body ->
// ----------------------------------------------------------------------------
//   Show the caption at the given time
// ----------------------------------------------------------------------------
    only_at TimeSlot,
        soft_box -700, 500, 400, 200, "#444", Body


key "+"         -> quote_step := quote_step + 1; refresh 0.1
key "-"         -> quote_step := quote_step - 1; refresh 0.1
key "q"         -> show_quotes := 1 - show_quotes; refresh 0.1
key "w"         -> show_quote 0
key "m"         -> show_quote 1
key "s"         -> show_quote 2
key "e"         -> show_quote 3
key "h"         -> show_quote 4
key "b"         -> show_quote 5
key "n"         -> show_quote 6


page_quote N ->
// ----------------------------------------------------------------------------
//   Show a selected quote in a page
// ----------------------------------------------------------------------------
    on "pageentry",
        show_quote N
    on "pageexit",
        show_quotes_v := 0.0
        show_quotes := 0.0


show_quote N    ->
// ----------------------------------------------------------------------------
//   Show a selected quote from keyboard
// ----------------------------------------------------------------------------
    show_quotes := 1
    quote_step N
    refresh 0.1
    on "pageexit",
        show_quotes_v := 0.0
        show_quotes := 0.0

show_quotes     -> 0.0
show_quotes_v   -> 0.0

interpolate 10%, show_quotes, show_quotes_v
if show_quotes_v > 0.0 then
    show show_quotes_v
    quotes
        quote "For every problem, there is a solution that is simple, clean and wrong", "Henry Louis Mencken"
        quote "There is more than one way to do it", "Perl motto (Larry Wall)"
        quote "The good thing about standards is that there are so many to choose from.", "Andrew Tannenbaum"
        quote "Entropy, i.e. disorder,  always increases with time", "Second law of thermodynamics"
        quote "Get half of the right thing available so that it spreads like a virus. Once people are hooked on it, improve it to 90% of the right thing.", "Richard P. Gabriel"
        quote "Break it properly so that you can fix it properly", "Fabiano Fidêncio"
        quote "I love cunning containers as much as anyone, but I've found that if I get rid of everything I don't need, I often don't need a container at all.", "Gretchen Rubin"
