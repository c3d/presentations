// ============================================================================
//
main_title_slide "Making a programming language simple is complicated",
//
// ============================================================================
    title page_label
    stepping
    picture
        text_box 0, -400, 1600, 200,
            style "story"
            color "white"
            align 100%
            font_size 35
            text "(C) 2019-2021 Christophe de Dinechin"

        at_step 1
        translate 510, 270, -200
        texture "spock.jpg"
        circle 400

        at_step 2
        texture ""
        speech_balloon -650, 200, 800, 300, 20, -150, -100
        text_box -650, 200, 800, 300,
            style "subtitle"
            color "darkblue"
            align 50%
            vertical_align 50%
            paragraph "Humans are so illogical!"

disabled
        only_at 2,
            SPOCK_WISDOM -> "movies/Spock-Highly Illogical-lbg6xoS3K3U.mp4##start-time=5 stop-time=19.0"
            movie_texture SPOCK_WISDOM
            refresh 0.1
            on "pageexit",
                movie_drop SPOCK_WISDOM


// ============================================================================
section_slide "Why is programming complicated?",
// ============================================================================
    title page_label
    subtitle "It's all a matter of scale, really"
    THE_COMPLICATED_MACHINE -> "movies/RubeGoldberg.mp4##noaudio"
    picture
        movie_texture THE_COMPLICATED_MACHINE
        translate 350, 250, 20
        rotate_z -2
        scale 55%
        rounded_rectangle 0, 0, texture_width, texture_height, 20
    on "pageexit",
        movie_drop THE_COMPLICATED_MACHINE

    object -8000, 0, 0, 12, 12, 12, "models/Resurs3D_Audi_S5.obj"



// ============================================================================
//
//    Fighting Moore's law
//
// ============================================================================

X1 -> 0.0
Y1 -> 0.0
Z1 -> 0.0
S1 -> 0.0

CX -> 0.0
CY -> 0.0
CZ -> 0.0
CS -> 0.0

set_arrow s0:symbol, s1:symbol -> endpoints_style s0, s1

body_slide "Problem: Why so many languages?",
// ----------------------------------------------------------------------------
//   Illustration basee sur la loi de Moore
// ----------------------------------------------------------------------------
    subtitle
        text "How Moore's law applies to software"
        at_step 11
        text ", and how to use it"
    picture
        translate_y 120
        scale 80%
        adjust_view_point
        move_speed -> if current_view_point > 8 then 0.05 else 0.15
        interpolate_scale move_speed, S1, CS
        interpolate_position move_speed, X1, Y1, Z1, CX, CY, CZ
        locally
            line_width 8
            color "transparent"
            line_color "red"
            path
                coord N:integer -> line_to 20*N, 70*exp(N*0.05), 0
                coord with 0..50
                set_arrow none, arrowhead

        locally
            color "transparent"
            line_color tao "orange"
            line_width 3
            translate -50, 50, 0
            line_arrow -30, 0, none, 1200, 0, arrowhead
            line_arrow 0, -30, none, 0, 800, arrowhead
            font "Gentium Plus", 30
            line_width 0
            color tao "orange"
            text_box 1200, -50, 200, 200,
                text "Time"
            rotatez 90
            text_box 750, -50, 200, 200,
                text "Complexity"

        abstraction N:integer ->
            locally
                if N >= current_view_point then show -0.1
                if current_view_point > 7 then show -0.1
                translate 20*(8*N+5), 70*exp((8*N+5)*0.05), 150
                align 0.0
                locally
                    line_width 4
                    line_color tao "navy", 30%
                    color "transparent"
                    path
                        move_to -130, 0, 0
                        line_to 130, 0, 0
                        set_arrow none, arrowhead
                text_box 0, 25, 250, 50,
                    vertical_align 1.0
                    font "Gentium Plus", 20, bold
                    text abstraction_language N
                text_box 0, -25, 250, 50,
                    vertical_align 0.0
                    font "Gentium Plus", 12
                    text abstraction_description N
                if N+1 = current_view_point then
                    show -1
                    locally
                        color "white", 90%
                        line_color tao "navy", 20%
                        line_width 1
                        rounded_rectangle 0, -50, 310, 70, 5
                    text_box 0, -50, 300, 60,
                        vertical_align 0.5
                        font "Menlo", 9
                        color tao "green"
                        text abstraction_code N

        locally
            color tao "navy"
            abstraction with 0..5

        if current_view_point > 7 then
            translate -CX, -CY, 80
            locally
                line_width 1
                color "white", 70%
                line_color tao "navy", 20%
                circle 0, 0, 110
                rotatez -40 * time
                translatez 25
                line_color tao "red"
                color tao "yellow"
                star_polygon 0, 0, 30, 30, 5, 4
            locally
                if CX > -20*(8*3+5) then
                    text_box 0, 55, 160, 100,
                        font "Gentium Plus", 18
                        color tao "green"
                        align 0.0
                        vertical_align 1.0
                        paragraph "Easy"
                        font "Gentium Plus", 12
                        paragraph "Tools work"
                        paragraph "Two guys in a garage"
                        paragraph "Easy money"
                else if current_view_point < 10 then
                    text_box 0, -55, 160, 100,
                        font "Gentium Plus", 18
                        color tao "red"
                        align 1.0
                        vertical_align 0.0
                        paragraph "Hard"
                        font "Gentium Plus", 12
                        paragraph "Tools are outdated"
                        paragraph  "Need more hands"
                        paragraph "Delays and costs overrun"
                else if current_view_point < 11 then
                    text_box 0, -65, 160, 100,
                        font "Gentium Plus", 18
                        color tao "orange"
                        align 0.5
                        vertical_align 0.0
                        paragraph "You are here"
                        font "Gentium Plus", 12
                        paragraph "Many languages"
                        paragraph  "Work sent to India"
                        paragraph "75% of projects fails"
                else
                    text_box 0, 65, 160, 100,
                        font "Gentium Plus", 18
                        color tao "green"
                        align 0.5
                        vertical_align 0.8
                        paragraph "The XL dream"
                        font "Gentium Plus", 12
                        paragraph "On-demand language"
                        paragraph "DSL ecosystem"
                        paragraph "Moore's law helps"


abstraction_language    0 -> "Fortran, Basic"
abstraction_description 0 -> "Symbols and expressions"
abstraction_code        0 ->
<<10 FOR X = 0 TO 100 STEP 0.1
20 Y = SIN(X) * COS(10 * X)
30 GOSUB 1000 : REM Plot X, Y
40 NEXT X >>

abstraction_language    1 -> "Pascal, C, Ada, Modula"
abstraction_description 1 -> "Structured programming"
abstraction_code        1 ->
<< for (x = 0; x < 100; x += 0.1)
    plot(x, sin(x) * cos(10*x)); >>

abstraction_language    2 -> "C++, Smalltalk, Eiffel"
abstraction_description 2 -> "Objects"
abstraction_code        2 ->
<< for (x = 0; x < 100; x += 0.1)
    plot.addDataPoint(x, sin(x) * cos(10*x));
 plot.draw(); >>

abstraction_language    3 -> "Java"
abstraction_description 3 -> "Distributed programs"
abstraction_code        3 ->
<<String plotDriver = "com.jnetdirect.jsql.JSQLDriver";
Class.forName(plotDriver);
PlotManager.connect(url, user, password);>>

abstraction_language    4 -> "Python, XML"
abstraction_description 4 -> "Software components"
abstraction_code        4 -> "<plot source=""$URL"" x_axis=""x"" y_axis=""y""/>"

abstraction_language    5 -> "XL"
abstraction_description 5 -> "On-demand notations"
abstraction_code        5 ->
    << plot (lambda x is sin x * cos(10*x)) >>

view_set ax:real, ay:real, az:real, as:real ->
    X1 := ax
    Y1 := ay
    Z1 := az
    S1 := as

view_point_zoom N:integer -> view_set -20*(8*N+5), -70*exp((8*N+5)*0.05), -150, 5.0
view_point 0            -> view_set -500.0, -500.0, 0.0, 1.0
view_point 1            -> view_point_zoom 0
view_point 2            -> view_point_zoom 1
view_point 3            -> view_point_zoom 2
view_point 4            -> view_point_zoom 3
view_point 5            -> view_point_zoom 4
view_point 6            -> view_point_zoom 5
view_point 7            -> view_set -500.0, -500.0, 0.0, 1.0
view_point 8            -> view_set -20*(8*3+5) + 120, -70*exp((8*3+5)*0.05), -150, 4.0
view_point 9            -> view_set -20*(8*3+5) - 120, -70*exp((8*3+5)*0.05), -150, 4.0
view_point 10           -> view_set -20*(8*3+5) - 350, -70*exp((8*3+5)*0.05) - 250, -150, 3.0
view_point 11           -> view_set -800, -680, -150, 3.0

view_point 12           -> view_set -900, -680, -150, 3.0
view_point 13           -> view_set -900, -800, -150, 3.0
view_point 14           -> view_set -950, -800, -150, 3.0
view_point 15           -> view_set -950, -900, -150, 3.0


view_point N:integer    -> view_set -950.0, -950.0, -150, 0.5

current_view_point -> 0
adjust_view_point ->
    if page_time < 0.1 then
        skip_to 0
    current_view_point := integer (step)
    view_point current_view_point



// ============================================================================
//
section_slide "I have this genius-level idea!",
//
// ============================================================================
    title page_label
    subtitle "Why don't we keep it simple, stupid?"
    picture
        texture "XLLogo.png"
        translate 350, 230, 20
        rotate_z -2
        scale 90%
        rounded_rectangle 0, 0, texture_width, texture_height, 20


// ----------------------------------------------------------------------------
base_slide "Turning ideas into code",
// ----------------------------------------------------------------------------
    title page_label
    subtitle "It sounds so simple!"
    picture
        stepping
        ideas_adjust fade_at(smooth_step, 2)
        ideas_adjust S:real ->
            translate_y -200 * S
            scale 1.0 - 0.5 * S
        image -550, -100, 100%, 100%, "Brain.png"

        at_step 1
        locally
            linear_gradient 0, 0, 256, 0, 256, 256,
                gradient_color 0%, "darkblue", 0.3
                gradient_color 10%, "darkblue", 0.9
                gradient_color 20%, "blue", 0.9
                gradient_color 50%, "cyan", 0.9
                gradient_color 80%, "blue", 0.9
                gradient_color 90%, "darkblue", 0.9
                gradient_color 100%, "darkblue", 0.0
            texture_wrap true, true
            texture_transform
                scale_x 10
                translate_x -0.3*time mod 1
            arrow 0, -100, 400, 100, 100, 0.5
        image  450, -20, 100%, 100%, "HP-Computer.png"

        at_step 3
        locally
            color "white", 0.8
            line_color "black", 0.4
            line_width 4
            speech_balloon -950, 650, 1700, 750, 40, -700, 50
        if smooth_step >= 2.8 then
            locally
                show -1
                light 0
                light_position 1000, 1000, 1000
                translate -700, 450, 250
                rotate_y 7 * page_time
                rotate_x -95
                object 0, 0, 0, 1200, 1200, 1200, "models/Resurs3D_Audi_S5.obj"

        at_step 4
        locally
            texture_mag_filter "NEAREST"
            translate 950, 650 + 50 * (sin (2.3 * page_time))^100, 0
            rotate_z 5 * sin(5.5 * time)
            color "white", 0.99
            image 0, 0, 2000%, 2000%, "Beetle.png"


// ----------------------------------------------------------------------------
body_slide "Is XL Minimalist?",
// ----------------------------------------------------------------------------
    subtitle "Perfection is achieved when there is nothing to remove"

    story
        * "Simple parse tree, 8 node types"
        * "One operator to rule them all"
        * "Basics moved to builtin library"
        * "Compilation and optimizations"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 2, "Single operator",          "single-operator.xl"
        colorize_file_at 3, "Basics",                   "basics.xl"
        colorize_file_at 4, "Compilation",              "compilation.xl"

    right_picture
        only_at 1,
            translate -100, 0, 0
            scale 80%
            simple_parse_tree

simple_parse_tree ->
    nt_x    -> -600
    nt_y N  -> 420 - 100 * N - 40 * (N/4)
    nt_w    -> 300
    nt_h    -> 80
    soft_box nt_x, nt_y 0, nt_w, nt_h, tao "red",    "Integer"
    node_describe 0, "0", "42", "1_000_000", "16#FFF0_FFFF", "2#1101#e5"
    soft_box nt_x, nt_y 1, nt_w, nt_h, tao "orange", "Real"
    node_describe 1, "0.3", "3.141_592_653", "1.0e100", "16#F.0F", "2#1e-5"
    soft_box nt_x, nt_y 2, nt_w, nt_h, tao "yellow", "Text"
    node_describe 2, """Accentué""", """Տեղայնացվող տեքստ""", "'A'", "<<Long multi-line text>>"
    soft_box nt_x, nt_y 3, nt_w, nt_h, tao "green",  "Symbol"
    node_describe 3, "ABC", "Go_2_Market", "+", "->"

    soft_box nt_x, nt_y 4, nt_w, nt_h, tao "ocean", "Infix"
    node_describe 4, "A+B", "A and B"
    soft_box nt_x, nt_y 5, nt_w, nt_h, tao "sky", "Prefix"
    node_describe 5, "-5", "sin X"
    soft_box nt_x, nt_y 6, nt_w, nt_h, tao "navy", "Postfix"
    node_describe 6, "3!", "25 km"
    soft_box nt_x, nt_y 7, nt_w, nt_h, tao "purple", "Block"
    node_describe 7, "(A)", "[A]", "{A}", <<
    print "Hello" >>

    node_describe N, List ->
        locally
            text_box 200, nt_y N, 1200, 100,
                style "story"
                vertical_align 50%
                align 0%
                node_describe_horiz List
    node_describe_horiz X, Y ->
        node_describe_horiz X
        node_describe_horiz Y
    node_describe_horiz X ->
        code X
        text "    "

// ----------------------------------------------------------------------------
body_slide "Is XL Declarative?",
// ----------------------------------------------------------------------------
    subtitle "A self-presenting programming language"
    story
        * "Tao3D, an XL derivative"
        * "Homoiconic"
        * "Functional"
        * "Reactive"
        * "Polytyped"
        * "Weird"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Tao3D",            "slide.xl"
        colorize_file_at 2, "Homoiconic",       "homoiconic.xl"
        colorize_file_at 3, "Functional",       "functional.xl"
        colorize_file_at 4, "Reactive",         "reactive.xl"
        colorize_file_at 5, "Polytyped",        "polytyped.xl"
        colorize_file_at 6, "Weird",            "weird.xl"

    left_picture
        only_at 4,
            color_hsv 20*time, 70%, 70%, 30%
            circle mouse_x, mouse_y, 100 + 40 * sin(8*time)
        only_at 6,
            for I in 1..25 loop
                color_hsv I * 5 + 10 * time, 90%, 50%, 30%
                line_color_hsv I * 5 + 3 + 10 * time, 90%, 50%, 100%
                rotate_z 5
                shape
                    ellipse 200, 0, 300, 60


// ============================================================================
//
section_slide "The simple stuff",
//
// ============================================================================
    title page_label
    subtitle "Even the simplest stuff is not so simple after all"
    picture
        texture "Not So Simple.jpg"
        translate 350, 230, 20
        rotate_z -2
        scale 45%
        rounded_rectangle 0, 0, texture_width, texture_height, 20


// ----------------------------------------------------------------------------
body_slide "Numbers",
// ----------------------------------------------------------------------------
    subtitle "Syntactic and semantic noise and sugar"

    story
        * "Natural vs. Integer"
        * "Real numbers are not really real"
        * "Based numbers"
        * "Version numbers"
        * "Not extensible enough?"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Natural vs Integer", "natural-numbers.xl"
        colorize_file_at 2, "Real numbers", "real-numbers.xl"
        colorize_file_at 3, "Based numbers", "based-numbers.xl"
        colorize_file_at 4, "Version numbers", "version-numbers.xl"
        colorize_file_at 5, "Extensible numbers", "extensible-numbers.xl"


// ----------------------------------------------------------------------------
body_slide "Simple expressions",
// ----------------------------------------------------------------------------
    subtitle "What? Significant whitespaces?"

    story
        * "Two very simple examples"
        * "XL is whitespace-sensitive (only in that case)"
        * "Someone had to convince me. He was right."

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Minus", "minus-simple.xl"


// ----------------------------------------------------------------------------
body_slide "Expression vs. statements",
// ----------------------------------------------------------------------------
    subtitle "Entering the ""humans are illogical"" segment of the talk"

    story
        * "Simple statements"
        * "Prefix functions"
        * "Logical precedence"
        * "Behavior expected by humans"
        * "Blocks"
        * "Remaining issues"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Simple statements", "simple-statements.xl"
        colorize_file_at 2, "Prefix functions", "prefix-statements.xl"
        colorize_file_at 3, "Logical precedence", "logical-precedence.xl"
        colorize_file_at 4, "What humans want", "expr-vs-stmt.xl"
        colorize_file_at 5, "Blocks", "block-expr-vs-stmt.xl"
        colorize_file_at 6, "Ambiguities", "ambiguities.xl"


// ----------------------------------------------------------------------------
body_slide "Program structures",
// ----------------------------------------------------------------------------
    subtitle "Entering the ""human logic is limited"" territory"
    story
        * "Constants in a pattern"
        * "Named constants"
        * "Metaboxing"
        * "Now this is complicated!"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Constants in a pattern", "pattern-constants.xl"
        colorize_file_at 2, "Named constants", "named-constants.xl"
        colorize_file_at 3, "Metaboxing", "metaboxing.xl"
        colorize_file_at 4, "Complicated!", "program-complications.xl"



// ============================================================================
//
section_slide "Fixing stuff that never worked right",
//
// ============================================================================
    title page_label
    subtitle "Hard to believe it's been broken for 50 years!"
    picture
        texture "Broken Glass.png"
        translate 250, 230, 20
        rotate_z -2
        scale 75%
        color "white", fade_in(page_time, 5)
        rounded_rectangle 0, 0, texture_width, texture_height, 20


// ----------------------------------------------------------------------------
body_slide "Minimum and maximum",
// ----------------------------------------------------------------------------
    subtitle "Generic variadic functions"
    story
        * "All languages have it (and it's ugly!)"
        * "It's always broken"
        * "Simple definition"
        * "Type-system checks"
        * "Multiple comparisons"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "In various languages", "minimax-languages.xl"
        colorize_file_at 2, "Always been broken", "minimax-broken.xl"
        colorize_file_at 3, "The XL variant", "minimax-xl.xl"
        colorize_file_at 4, "Validated generics!", "minimax-validation.xl"
        colorize_file_at 5, "Multiple comparisons!", "minimax-compare.xl"


// ----------------------------------------------------------------------------
body_slide "Text formatting and I/O",
// ----------------------------------------------------------------------------
    subtitle "Let's fix printf and iostream"
    story
        * "All languages have it (and it's ugly!)"
        * "It's always broken"
        * "Simple definition"
        * "Extensible type safety"
        * "Multiple streams"
        * "Text formatting"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "In various languages", "io-languages.xl"
        colorize_file_at 2, "Always been broken", "io-broken.xl"
        colorize_file_at 3, "The XL variant", "io-xl.xl"
        colorize_file_at 4, "Extensible type safety", "io-extensible.xl"
        colorize_file_at 5, "Stream redirection", "io-stream.xl"
        colorize_file_at 6, "Text formatting!", "io-format.xl"


// ============================================================================
//
section_slide "Innovating in data types",
//
// ============================================================================
    title page_label
    subtitle "Going beyond the C++ STL"
    picture
        texture "Rubber Duck.png"
        translate 250, 230, 20
        rotate_z -2
        scale 75%
        color "white", fade_in(page_time, 5)
        rounded_rectangle 0, 0, texture_width, texture_height, 20


// ----------------------------------------------------------------------------
body_slide "Library-defined array types",
// ----------------------------------------------------------------------------
    subtitle "Recursive definition"
    story
        * "Array type definition"
        * "Used like in regular languages"
        * "Optimized storage"
        * "Array minimum"
        * "Array I/O"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Interface", "array-implementation.xl"
        colorize_file_at 2, "Implementation", "array-usage.xl"
        colorize_file_at 3, "Optimization", "array-optimize.xl"
        colorize_file_at 4, "Minimum", "array-min.xl"
        colorize_file_at 5, "I/O", "array-io.xl"


// ----------------------------------------------------------------------------
body_slide "Complex numbers",
// ----------------------------------------------------------------------------
    subtitle "Multiple representations for faster computations"
    story
        * "Polar and cartesian forms"
        * "Arithmetic"
        * "Transcendantal functions"
        * "Complex I/O is trivial"
        * "As easy to use as any built-in type"
        * "Lexicographic order"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Polar and cartesian", "complex-forms.xl"
        colorize_file_at 2, "Complex arithmetic", "complex-arithmetic.xl"
        colorize_file_at 3, "Transcendental functions", "complex-functions.xl"
        colorize_file_at 4, "Complex I/O", "complex-io.xl"
        colorize_file_at 5, "Easy to use", "complex-usage.xl"
        colorize_file_at 6, "Lexicographic order", "complex-order.xl"


// ----------------------------------------------------------------------------
body_slide "Network buffers",
// ----------------------------------------------------------------------------
    subtitle "Going beyond what C and C++ can do"
    story
        * "Network buffer definition"
        * "Type-safe buffer resizing"

    right_picture
        code_move -100, 0, 1100, 800
        colorize_file_at 1, "Definition", "buffer-definition.xl"
        colorize_file_at 2, "Resizing", "buffer-resizing.xl"



// ============================================================================
//
body_slide "https://c3d.github.com/xl",
//
// ============================================================================
    picture
        text_box 0, -150, 1200, 120,
            font "Edwardian Script ITC", 220
            color_hsv 2 * time, 70%, 90%
            text "Thank you!"
    picture
        texture "Informagie QR Code.png"
        translate 550, 230, -200
        rotate_z -2
        scale 55%
        rounded_rectangle 0, 0, texture_width, texture_height, 20

    picture
        texture "XL-Doc.png"
        translate -650, 230, -200
        rotate_z 4
        scale 220%
        rectangle texture_width, texture_height
